<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>工具人小方的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fxhstudy.com/"/>
  <updated>2021-04-08T17:11:33.709Z</updated>
  <id>https://fxhstudy.com/</id>
  
  <author>
    <name>工具人•小方</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>补码的深入理解</title>
    <link href="https://fxhstudy.com/article/78684e89.html"/>
    <id>https://fxhstudy.com/article/78684e89.html</id>
    <published>2021-04-07T14:12:57.000Z</published>
    <updated>2021-04-08T17:11:33.709Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#856363" size="4" face="Open Sans"><b></p><p>之前我有写过关于原码补码和反码的文章，</p><p><a href="https://fxhstudy.com/article/2526b7ad.html" class="LinkCard">原码反码和补码</a></p><p>但是都是大概介绍了一下如何定义以及如何计算，并没有深究。</p><p>这段时间在看《深入理解计算机系统》时，正好看到关于补码的介绍，介绍得非常得详细。这里想记录关于补码的一些深度理解。</p><h3 id="问题引入"><a href="#问题引入" class="headerlink" title="问题引入"></a>问题引入</h3><p>在刚学C语言时，学习到关于数据类型Int时，我们会发现书上给的Int类型的取值范围是在<br><font color="#9400D3" size="3" face="Open Sans">-2 147 483 648 ~ 2 147 483 647</font><br>你有没有思考过这么一个问题，为什么取值的正负值不是对称的呢？我们会发现|Min|=|Max|+1，有人可能会考虑0，但是，0在其中起到什么作用呢？</p><p>其实，这就和我们接下来要说的补码有关系了。(本想从数学上来更深入讨论补码的原理，但确实很多符号打不出来，就放弃从原理层面来介绍了。)</p><h3 id="补码编码"><a href="#补码编码" class="headerlink" title="补码编码"></a>补码编码</h3><p>我们知道，在计算机中，分为有符号数和无符号数，C语言默认是有符号数，用unsigned来表示无符号数(Java只支持有符号数)。<br>其中最常见的有符号数的计算机表示方式就是补码(two’s-complement)形式。在计算机系统中，数值一律用补码来表示和存储。补码可以将符号位和数值域统一处理；同时，加法和减法也可以统一处理。</p><p>我们知道，其实在计算机中的所以的一切，都是由二进制组成的。<br>在程序中，我们给变量赋的值，不论多大的数，在计算机底层其实都是由0和1组成的。<br>比如，short类型的<font color="#FFB6C1" size="3" face="Open Sans">12345</font>的十六进制是<font color="#FFB6C1" size="3" face="Open Sans">0x3039</font>,转化为二进制就是<font color="#FFB6C1" size="3" face="Open Sans"> [0011 0000 0011 1001] </font></p><p>而short类型的<font color="#FFB6C1" size="3" face="Open Sans">-12345</font>转化为二进制是<font color="#FFB6C1" size="3" face="Open Sans"> [1011 0000 0011 1001] </font></p><p>我们可以发现，<font color="#FFB6C1" size="3" face="Open Sans">12345</font>和<font color="#FFB6C1" size="3" face="Open Sans">-12345</font>的二进制，其实就是最高位一个是0，一个是1。</p><p>在计算机中，我们将最高有效位称之为符号位，0即代表这个数为正数，而1，代表这个数为负数。</p><p>所以对于补码，符号位为0时，数的取值范围为<br><font color="#9400D3" size="3" face="Open Sans">0 ~ 2 147 483 647</font></p><p>而符号位为1时，数的取值范围为<br><font color="#9400D3" size="3" face="Open Sans">-2 147 483 648 ~ 0</font></p><p>正数的补码就是其原码，而负数的原码则是其反码+1。<br>所以<font color="#FFB6C1" size="3" face="Open Sans">12345</font>在计算机存储中就是按照原码来存储的，其补码等于原码。而我们所看到的<font color="#FFB6C1" size="3" face="Open Sans">-12345</font>，它的原码是<font color="#FFB6C1" size="3" face="Open Sans"> [1011 0000 0011 1001] </font>，但在存储中是按照补码来的，也就是说存储在计算机中其实是<font color="#FFB6C1" size="3" face="Open Sans"> [1100 1111 1100 0111] </font>转化为十进制是<font color="#FFB6C1" size="3" face="Open Sans">53191</font>。</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>结合以上知识，之所以会有这样的不对称性，是因为一半的位模式(符号位设置为1的数)表示负数，而另一半是(符号位设置为0的数)表示非负数。因为0是非负数，也就意味着能表示的整数比负数少一个。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>其实并不是很深入地理解，本想从数学角度来讨论补码的，但确实很多数学符号不好表示，所以就比较简单地介绍了一下补码。<br>如果真的想要了解数学原理，可以去看看《深入理解计算机系统》这本书，里面介绍得真的很详细。<br></b></font></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;#856363&quot; size=&quot;4&quot; face=&quot;Open Sans&quot;&gt;&lt;b&gt;&lt;/p&gt;
&lt;p&gt;之前我有写过关于原码补码和反码的文章，&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fxhstudy.com/article/2526b7ad.html
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="小知识点" scheme="https://fxhstudy.com/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
      <category term="计算机原理" scheme="https://fxhstudy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC执行原理</title>
    <link href="https://fxhstudy.com/article/7a197da5.html"/>
    <id>https://fxhstudy.com/article/7a197da5.html</id>
    <published>2021-04-04T13:58:26.000Z</published>
    <updated>2021-04-08T17:04:00.629Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#856363" size="4" face="Open Sans"><b></p><p><img src="https://qiniuyun.fxhstudy.com/SpringMVC%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%861.png" srcset="/img/loading.gif"><br></p><p>图为SpringbootMVC的一个较为完整的流程图，实线表示SpringMVC框架提供的技术，不需要开发者实现，虚线表示需要开发者实现。</p><h3 id="简要分析执行流程"><a href="#简要分析执行流程" class="headerlink" title="简要分析执行流程"></a>简要分析执行流程</h3><ol type="1" start="1">    <li><code>DispatcherServlet</code>表示前置控制器，是整个<code>SpringMVC</code>的控制中心。用户发出请求，<code>DispatcherServlet</code>接收请求并拦截请求。<br>    我们假设请求的url为:http://localhost:8080/springMVC/hello<br><br>    <b>如上url拆分成成三部分</b><br>    http://localhost:8080服务器域名<br>    <code>SpringMVC</code>部署在服务器上的web站点<br>    <code>hello</code>表示控制器<br>    通过分析，如上url表示为：请求位于服务器localhost:8080上的<code>SpringMVC</code>站点的<code>hello</code>控制器。</li>    <li><code>HandlerMapping</code>为处理器映射。<code>DispatcherServlet</code>调用<br><code>HandlerMapping</code>,<code>HandlerMapping</code>根据请求url查找<code>Handler</code>。</li>    <li><code>HandlerExecution</code>表示具体的<code>Handler</code>,其主要作用是根据url查找控制器，如上url被查找控制器为：<code>hello</code>。</li>    <li><code>HandlerExecution</code>将解析后的信息传递给<code>DispatcherServlet</code>,如解析控制器映射等。</li>    <li><code>HandlerAdapter</code>表示处理器适配器，其按照特定的规则去执行<code>Handler</code>。</li>    <li><code>Handler</code>让具体的<code>Controller</code>执行。</li>    <li><code>Controller</code>将具体的执行信息返回给<code>HandlerAdapter</code>,如<code>ModelAndView</code>。</li>    <li><code>HandlerAdapter</code>将视图逻辑名或模型传递给<code>DispatcherServlet</code>。</li>    <li><code>DispatcherServlet</code>调用视图解析器(ViewResolver)来解析<code>HandlerAdapter</code>传递的逻辑视图名。</li>    <li>视图解析器将解析的逻辑视图名传给<code>DispatcherServlet</code>。</li>    <li><code>DispatcherServlet</code>根据视图解析器解析的视图结果，调用具体的视图。</li>    <li>最终视图呈现给用户。</li></ol></b></font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;#856363&quot; size=&quot;4&quot; face=&quot;Open Sans&quot;&gt;&lt;b&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniuyun.fxhstudy.com/SpringMVC%E6%89%A7%E8%A1%8C%E5%8E%9F%E
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="Spring" scheme="https://fxhstudy.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>一些小分享</title>
    <link href="https://fxhstudy.com/article/39d7a96.html"/>
    <id>https://fxhstudy.com/article/39d7a96.html</id>
    <published>2021-04-02T02:28:33.000Z</published>
    <updated>2021-04-04T15:40:30.773Z</updated>
    
    <content type="html"><![CDATA[<font color="#856363" size="4" face="Open Sans">好像没有写过分享类的文章，这里分享一些我jio得可以收藏一波的小东西。<h3 id="周杰伦至今所有的专辑"><a href="#周杰伦至今所有的专辑" class="headerlink" title="周杰伦至今所有的专辑"></a>周杰伦至今所有的专辑</h3><p>哈哈，很久就想分享这个了，(我是杰伦粉(狂喜)，等疫情结束了，那我必要去看杰伦的演唱会)几乎包含了杰伦所有专辑上的所有的歌，一共分享了149首。<br><br>这里没有很系统地将所有专辑分类，其中还有一些翻唱。<br><br>另外，分享的这些基本上都是.wav格式，基本上每首歌都是在30~50M之间。<br><br>我用的是某易云，但是由于某易云的版权原因，基本上听不到Jay的歌，所以我都是上传到某易云云盘中去听，可以试试。但是分享的这些，随便一首歌就很大，如果在惜流量的话，建议还是不要这样做。<br><br>后续如果收集到.mp3格式的话，后续会加进来。<br><br>链接：<a href="https://pan.baidu.com/s/1vcwdETI_2-WBhswRJpLhmQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1vcwdETI_2-WBhswRJpLhmQ</a><br>提取码：2333<br></font></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;font color=&quot;#856363&quot; size=&quot;4&quot; face=&quot;Open Sans&quot;&gt;
好像没有写过分享类的文章，这里分享一些我jio得可以收藏一波的小东西。


&lt;h3 id=&quot;周杰伦至今所有的专辑&quot;&gt;&lt;a href=&quot;#周杰伦至今所有的专辑&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="日常" scheme="https://fxhstudy.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>最近的事</title>
    <link href="https://fxhstudy.com/article/1695c184.html"/>
    <id>https://fxhstudy.com/article/1695c184.html</id>
    <published>2021-03-31T15:42:39.000Z</published>
    <updated>2021-03-31T16:17:04.957Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#856363" size="4" face="Open Sans"><b>终于把该记录的文章都写完了，来说一说最近的事情吧。<br>最近参加了计算机设计大赛，可以说是忙了整整一个多月，跟着老师做项目，直到今天校赛才比完(不出意外的话，校赛一等奖了，小窃喜)。</p><p>u1s1,灰常灰常累，但是不得不说，成长得很快(被迫成长，没有足够的知识去支持你做项目，但是老师给了你任务，你就必须逼迫着你去学习新知)，虽然是被迫成长，但是确实很大进步，如果按我之前的学习进度来，学到我现在的程度，大概要学到暑假还不一定能够学完。</p><p>总得来说，很幸苦，但是真的真的学到了很多东西，不管是技术方面还是与队友如何交流合作方面，都学到了很多。这真的是我没想到的。</p><p>也正是因为这个项目，博客也停滞了比较久，之后可能更得比较少，由于学校的名额原因，我们直接进入到了省赛，接下来可以说更忙了，不下于这个月。如果省赛取得了二等奖以及二等奖以上的成绩，那就还要参加国赛，到时候就不是和省里面的大学比赛了，可以接触到更高的层次了，想想就激动。</p><p>多说无益，接下来的省赛要好好努力了,争取拿个好一点名次，加油!</p></b></font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;#856363&quot; size=&quot;4&quot; face=&quot;Open Sans&quot;&gt;&lt;b&gt;终于把该记录的文章都写完了，来说一说最近的事情吧。&lt;br&gt;最近参加了计算机设计大赛，可以说是忙了整整一个多月，跟着老师做项目，直到今天校赛才比完(不出意外的话，校赛一等奖了
      
    
    </summary>
    
    
      <category term="生活" scheme="https://fxhstudy.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="个人" scheme="https://fxhstudy.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Junit单元测试</title>
    <link href="https://fxhstudy.com/article/411de67e.html"/>
    <id>https://fxhstudy.com/article/411de67e.html</id>
    <published>2021-03-31T14:19:44.000Z</published>
    <updated>2021-03-31T15:39:19.876Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote>    JUnit 是一个 Java 编程语言的单元测试框架。JUnit 在测试驱动的开发方面有很重要的发展，是起源于 JUnit 的一个统称为 xUnit 的单元测试框架之一。</blockquote><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><ol type="1" start="1">    <li>可以书写一系列的测试方法，对项目所有的接口或者方法进行单元测试。</li>    <li>启动后，自动化测试，并判断执行结果, 不需要人为的干预。</li>    <li>只需要查看最后结果，就知道整个项目的方法接口是否通畅。</li>    <li>每个单元测试用例相对独立，由Junit 启动，自动调用。不需要添加额外的调用语句。</li>    <li>添加，删除，屏蔽测试方法，不影响其他的测试方法。 开源框架都对JUnit 有相应的支持。</li></ol><h3 id="测试分类"><a href="#测试分类" class="headerlink" title="测试分类"></a>测试分类</h3><p><font color="#856363" size="4" face="Open Sans"><b></p><ol type="1" start="1">    <li>黑盒测试：不需要写代码，给输入的只，看程序是否能够输出期望的值。</li>    <li>白盒测试：需要写代码的。关注程序具体的执行流程。</li></ol><p>这里我们所说的Junit就是白盒测试。</b><br></font></p><h3 id="Junit使用"><a href="#Junit使用" class="headerlink" title="Junit使用"></a>Junit使用</h3><h4 id="定义测试类"><a href="#定义测试类" class="headerlink" title="定义测试类"></a>定义测试类</h4><p>定义一个测试类(测试用例)<br>建议：<br></p><li>    测试类名：被测试的类名Test        CalulatorTest</li><li>    包名：xxx.xxx.xx.test            com.fxhstudy.test</li><h4 id="定义测试方法"><a href="#定义测试方法" class="headerlink" title="定义测试方法"></a>定义测试方法</h4><p>定义测试的方法：可以独立运行<br>建议：<br></p><li>    方法名：test测试的方法名        testAdd()</li><li>    返回值：void</li><li>    参数列表：空参</li><h4 id="给方法加-Test"><a href="#给方法加-Test" class="headerlink" title="给方法加@Test"></a>给方法加@Test</h4><p>当我们加入@Test注解时，会报错，直接Alt+Enter,会自动给你添加Junit测试类包</p><h3 id="判定结果"><a href="#判定结果" class="headerlink" title="判定结果"></a>判定结果</h3><li>    红色：失败</li><li>    绿色：成功</li><li>    一般我们会使用断言操作来处理结果</li><br><p><code>Assert.assertEquals(期望的结果,运算的结果);</code></p><h3 id="如何操作"><a href="#如何操作" class="headerlink" title="如何操作"></a>如何操作</h3><p>这里我在<code>junit</code>文件夹下创建了<code>Calculator</code>,其中写了<code>add</code>和<code>sub</code>测试方法</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.fxhstudy.junit;<br><br><span class="hljs-comment">/**<br> * 计算器类<br> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Calculator</span> </span>&#123;<br><br>    <span class="hljs-comment">/**<br>     * 加法<br>     * <span class="hljs-doctag">@param</span> a<br>     * <span class="hljs-doctag">@param</span> b<br>     * <span class="hljs-doctag">@return</span><br>     */</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span></span>&#123;<br>        <span class="hljs-keyword">return</span> a + b;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sub</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span></span>&#123;<br>        <span class="hljs-keyword">return</span> a - b;<br>    &#125;<br><br>&#125;<br></code></pre></div></td></tr></table></figure><p>在test文件夹下面创建了<code>CalculatorTest</code>测试类</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.fxhstudy.test;<br><br><span class="hljs-keyword">import</span> com.fxhstudy.junit.Calculator;<br><span class="hljs-keyword">import</span> org.junit.Test;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CalculatorTest</span> </span>&#123;<br><br>    <span class="hljs-comment">/**<br>     * 测试add方法<br>     */</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-comment">//        System.out.println("test被执行了");</span><br>        <span class="hljs-comment">//1. 创建计算机对象</span><br>        Calculator c = <span class="hljs-keyword">new</span> Calculator();<br>        <span class="hljs-comment">//2. 调用add方法</span><br>        <span class="hljs-keyword">int</span> result = c.add(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br>    &#125;<br><br>&#125;<br></code></pre></div></td></tr></table></figure><p><img src="https://qiniuyun.fxhstudy.com/Junit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%951.png" srcset="/img/loading.gif"><br></p><p>如图则表示我们的没有异常，注意，没有异常是代表程序在系统运行中是没有问题，并不表示你的代码和你所预期的一样。<br>如何想测试和你所预期是否一致，我们需要用到断言，下面会介绍断言。</p><p>接着，我们将<code>Calculator</code>中的测试方法添加异常</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.fxhstudy.junit;<br><br><span class="hljs-comment">/**<br> * 计算器类<br> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Calculator</span> </span>&#123;<br><br>    <span class="hljs-comment">/**<br>     * 加法<br>     * <span class="hljs-doctag">@param</span> a<br>     * <span class="hljs-doctag">@param</span> b<br>     * <span class="hljs-doctag">@return</span><br>     */</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span></span>&#123;<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">3</span> / <span class="hljs-number">0</span>;<span class="hljs-comment">//这里会报异常</span><br>        <span class="hljs-keyword">return</span> a + b;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sub</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span></span>&#123;<br>        <span class="hljs-keyword">return</span> a - b;<br>    &#125;<br><br>&#125;<br></code></pre></div></td></tr></table></figure><p>再用测试类测试时，会出现这样的错误</p><p><img src="https://qiniuyun.fxhstudy.com/Junit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%952.png" srcset="/img/loading.gif"><br></p><p>这里就是因为测试的方法出现了错误异常，但是你在写程序时，编译器是不会爆红的。</p><p>接着我们使用断言操作来处理结果</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.fxhstudy.test;<br><br><span class="hljs-keyword">import</span> com.fxhstudy.junit.Calculator;<br><span class="hljs-keyword">import</span> org.junit.Assert;<br><span class="hljs-keyword">import</span> org.junit.Test;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CalculatorTest</span> </span>&#123;<br><br>    <span class="hljs-comment">/**<br>     * 测试add方法<br>     */</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-comment">//        System.out.println("test被执行了");</span><br>        <span class="hljs-comment">//1. 创建计算机对象</span><br>        Calculator c = <span class="hljs-keyword">new</span> Calculator();<br>        <span class="hljs-comment">//2. 调用add方法</span><br>        <span class="hljs-keyword">int</span> result = c.add(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br><br>        <span class="hljs-comment">//3. 断言 我断言这个结果是3</span><br>        Assert.assertEquals(<span class="hljs-number">3</span>, result);<br>    &#125;<br><br>&#125;<br></code></pre></div></td></tr></table></figure><p>测试成功，没有异常</p><p><img src="https://qiniuyun.fxhstudy.com/Junit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%953.png" srcset="/img/loading.gif"><br></p><p>接着我们再将断言结果改为-1</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//3. 断言 我断言这个结果是-1</span><br>        Assert.assertEquals(-<span class="hljs-number">1</span>, result);<br></code></pre></div></td></tr></table></figure><p>此时出现了异常</p><p><img src="https://qiniuyun.fxhstudy.com/Junit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%954.png" srcset="/img/loading.gif"><br></p><p>以上就是关于Junit的一些基本测试方法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;blockquote&gt;
    JUnit 是一个 Java 编程语言的单元测试框架。JUnit 在测试驱动的开发方面有很重要的发展，是起源于 
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="IDEA" scheme="https://fxhstudy.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>springboot+thymeleaf打包成jar后找不到静态资源的坑[转]</title>
    <link href="https://fxhstudy.com/article/931cd52f.html"/>
    <id>https://fxhstudy.com/article/931cd52f.html</id>
    <published>2021-03-31T13:58:31.000Z</published>
    <updated>2021-03-31T14:17:31.045Z</updated>
    
    <content type="html"><![CDATA[<blockquote>    原文链接:<a href="https://juejin.cn/post/6896312475390574599" target="_blank" rel="noopener">https://juejin.cn/post/6896312475390574599</a></blockquote><br><p>这是我最近在做项目的时候遇到的问题，觉得可以记录下来，以后写的时候可以注意,这篇文章是转自CSDN的，这里源地址链接已经放到上面了。</p><h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p><font color="#856363" size="4" face="Open Sans"><b>使用的springboot开发项目，在开发阶段没有任何问题，然而在打成jar包准备进行测试发布时，出现org.thymeleaf.exceptions.TemplateInputException:Error resolving template [login], template might not exist or might not be accessible by any of the configured Template Resolvers</p><p>首页都进不去。</p><p>网上逛了一圈，大多数都是说controller在return的时候去掉前面的斜杠，即：</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span>(<span class="hljs-string">"/index"</span>)<br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">index</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">"/index"</span>; <br>    <span class="hljs-comment">//把"/index" 变成"index"</span><br>    <span class="hljs-comment">//如 return "index"</span><br>&#125;<br></code></pre></div></td></tr></table></figure><p>先不说这样并不可行，就算可以，上百个controller难道要一个一个改？果断放弃这条思路。<br></b><br></font></p><h3 id="解决思路及最终解决步骤："><a href="#解决思路及最终解决步骤：" class="headerlink" title="解决思路及最终解决步骤："></a>解决思路及最终解决步骤：</h3><p>从错误信息上看，很明显是找不到对应的html文件，先来看一下我的项目文件目录结构：</p><p><img src="https://img-blog.csdnimg.cn/20190409202443567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ2ODExMg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif"><br></p><p><font color="#856363" size="4" face="Open Sans"><b>这里就要批评一下自己了，这个webapp是我自己加上的，你问我为什么？因为之前springMvc的结构就是这样的。。。。</p><p>这就是读书读一半的恶果了，同学们要引以为戒啊。</p><p>然后看一下yml文件的配置：</p><p><img src="https://img-blog.csdnimg.cn/20190409202725708.png" srcset="/img/loading.gif"><br></p><p>这里主要是配置springmvc支持的，手动加上前面的webapp目录，把静态资源往上一放，在yml再配置一下springmvc支持，项目运行起来那是一点问题都没有，假如后面项目打包成war包，一样可以完美运行。然而。。。。</p><p>当我打包成jar包后，完全没办法运行啊。。。。</p><p>然后我用winrar打开jar包，想看看我的文件都去哪了。。。。</p><p><img src="https://img-blog.csdnimg.cn/20190409203055806.png" srcset="/img/loading.gif"><br><br>这个是jar包打开最外层，再往下找，看看boot-inf里面有什么<br><br><img src="https://img-blog.csdnimg.cn/2019040920323850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ2ODExMg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif"><br><br>我的静态资源文件去哪啦？？？</p><p>正常的目录结构应该是这样的（以tomcat为例）：<br><img src="https://img-blog.csdnimg.cn/20190409203438976.png" srcset="/img/loading.gif"><br></p><p>这说明我的webapp下面的文件一个也没有编译进jar包里，能找到文件才怪了。。。</p><p>知道了问题所在，那剩下来的就是如何解决掉这个问题了</p><p>springboot有说明：所有的静态文件都应该放在static、templates或者resources下（我怎么好像记得是4个？？？）。</p><p>个人比较喜欢resources，所以就先新建了一个resources文件夹，然后把所有的资源文件都放到了resources文件夹下面：</p><p><img src="https://img-blog.csdnimg.cn/20190409203952236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ2ODExMg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif"><br></p><p>文件移动过来后，再重新编译，然后再去找，终于找到了这些可爱的文件：</p><p><img src="https://img-blog.csdnimg.cn/20190409204111888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ2ODExMg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif"><br></p><p>最后一步：配置springMvc的前后缀：</p><p><img src="https://img-blog.csdnimg.cn/20190409204350815.png" srcset="/img/loading.gif"><br></p><p>这里注意一下最后的斜杠不能少。</p><p>重新编译后，终于可以正常运行起来。</p></b></font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
    原文链接:&lt;a href=&quot;https://juejin.cn/post/6896312475390574599&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://juejin.cn/post/68963124753
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="Springboot" scheme="https://fxhstudy.com/tags/Springboot/"/>
    
  </entry>
  
  <entry>
    <title>IDEA完成热部署</title>
    <link href="https://fxhstudy.com/article/c83ff776.html"/>
    <id>https://fxhstudy.com/article/c83ff776.html</id>
    <published>2021-03-31T12:35:50.000Z</published>
    <updated>2021-03-31T14:17:49.406Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h3><p><font color="#856363" size="4" face="Open Sans"><b>热部署就是正在运行状态的应用，修改了他的源码之后，在<font color="#ff6781" size="4" face="Open Sans">不重新启动</font>的情况下能够自动把增量内容编译并部署到服务器上，使得修改立即生效。热部署为了解决的问题有两个， 一是在开发的时候，修改代码后不需要重启应用就能看到效果，大大提升开发效率；二是生产上运行的程序，可以在不停止运行的情况下进行升级，不影响用户使用。</b><br></font></p><h3 id="二、部署"><a href="#二、部署" class="headerlink" title="二、部署"></a>二、部署</h3><h4 id="一、引入依赖"><a href="#一、引入依赖" class="headerlink" title="一、引入依赖"></a>一、引入依赖</h4><p><font color="#856363" size="4" face="Open Sans"><b><br>这里我是直接用springboot来介绍怎么完成热部署的。<br></p><p>在pom.xml中加入以下代码:<br></b><br></font></p><p><font color="#856363" size="4" face="Open Sans"><b></p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--Springboot 工程热部署--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-devtools<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></div></td></tr></table></figure><img src="https://qiniuyun.fxhstudy.com/IDEA%E5%AE%8C%E6%88%90%E7%83%AD%E9%83%A8%E7%BD%B21.png" srcset="/img/loading.gif"></b></font><h4 id="二、配置file"><a href="#二、配置file" class="headerlink" title="二、配置file"></a>二、配置file</h4><p><font color="#856363" size="4" face="Open Sans"><b><br>在IDEA上进行配置file–&gt;左击–&gt;setting–&gt;compilter-&gt;build project autoMatically 复选框勾上</p><img src="https://qiniuyun.fxhstudy.com/IDEA%E5%AE%8C%E6%88%90%E7%83%AD%E9%83%A8%E7%BD%B22.png" srcset="/img/loading.gif"></b></font><h4 id="三、Registry"><a href="#三、Registry" class="headerlink" title="三、Registry"></a>三、Registry</h4><p><font color="#856363" size="4" face="Open Sans"><b><br>在代码块编辑区中通过快捷键 Ctrl+Shift+Alt+/ 选择Registry<br>找到 <code>compiler.automake.allow.when.app.running</code> 然后复选框勾上，此时就完成了IDEA工程热部署了。</p><img src="https://qiniuyun.fxhstudy.com/IDEA%E5%AE%8C%E6%88%90%E7%83%AD%E9%83%A8%E7%BD%B23.png" srcset="/img/loading.gif"></b></font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、概念&quot;&gt;&lt;a href=&quot;#一、概念&quot; class=&quot;headerlink&quot; title=&quot;一、概念&quot;&gt;&lt;/a&gt;一、概念&lt;/h3&gt;&lt;p&gt;&lt;font color=&quot;#856363&quot; size=&quot;4&quot; face=&quot;Open Sans&quot;&gt;&lt;b&gt;热部署就是正在运行状态
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="IDEA" scheme="https://fxhstudy.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>好用的JS代码</title>
    <link href="https://fxhstudy.com/article/c2decd56.html"/>
    <id>https://fxhstudy.com/article/c2decd56.html</id>
    <published>2021-02-26T06:53:56.000Z</published>
    <updated>2021-02-26T08:02:31.358Z</updated>
    
    <content type="html"><![CDATA[<h2 id="春节灯笼"><a href="#春节灯笼" class="headerlink" title="春节灯笼"></a>春节灯笼</h2><p class="note note-success">    放入head文件中即可实现春节灯笼<br>    < script src="https://cdn.jsdelivr.net/gh/lz1473/test@master/jscss/script/dl_2.js"> < /script>    <br></p><p>效果图</p><p><img src="https://qiniuyun.fxhstudy.com/%E5%A5%BD%E7%94%A8%E7%9A%84JS%E4%BB%A3%E7%A0%81.png" srcset="/img/loading.gif" alt="效果图"></p><p>或者将下列代码放入head文件中</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;!-- 灯笼代码 --&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-box2"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"xian"</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-b"</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-t"</span>&gt;</span>年<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui shui-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-c"</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-b"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-box3"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"xian"</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-b"</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-t"</span>&gt;</span>新<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui shui-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-c"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-b"</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-box1"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"xian"</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-b"</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-t"</span>&gt;</span>乐<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui shui-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-c"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-b"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-box"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"xian"</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-b"</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"deng-t"</span>&gt;</span>快<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui shui-a"</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-c"</span>&gt;</span><br><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"shui-b"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span><span class="css"><br>    <span class="hljs-selector-class">.deng-box</span> &#123;<br>        <span class="hljs-attribute">position</span>: fixed;<br>        <span class="hljs-attribute">top</span>: -<span class="hljs-number">40px</span>;<br>        <span class="hljs-attribute">right</span>: <span class="hljs-number">150px</span>;<br>        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">9999</span>;<br>        <span class="hljs-attribute">pointer-events</span>: none;<br>    &#125;<br><br>    <span class="hljs-selector-class">.deng-box1</span> &#123;<br>        <span class="hljs-attribute">position</span>: fixed;<br>        <span class="hljs-attribute">top</span>: -<span class="hljs-number">30px</span>;<br>        <span class="hljs-attribute">right</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">9999</span>;<br>        <span class="hljs-attribute">pointer-events</span>: none<br>    &#125;<br><br>    <span class="hljs-selector-class">.deng-box2</span> &#123;<br>        <span class="hljs-attribute">position</span>: fixed;<br>        <span class="hljs-attribute">top</span>: -<span class="hljs-number">40px</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">150px</span>;<br>        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">9999</span>;<br>        <span class="hljs-attribute">pointer-events</span>: none<br>    &#125;<br><br>    <span class="hljs-selector-class">.deng-box3</span> &#123;<br>        <span class="hljs-attribute">position</span>: fixed;<br>        <span class="hljs-attribute">top</span>: -<span class="hljs-number">30px</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">9999</span>;<br>        <span class="hljs-attribute">pointer-events</span>: none<br>    &#125;<br><br>    <span class="hljs-selector-class">.deng-box1</span> <span class="hljs-selector-class">.deng</span>,<br>    <span class="hljs-selector-class">.deng-box3</span> <span class="hljs-selector-class">.deng</span> &#123;<br>        <span class="hljs-attribute">position</span>: relative;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">90px</span>;<br>        <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-number">#d8000f</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">216</span>, <span class="hljs-number">0</span>, <span class="hljs-number">15</span>, .<span class="hljs-number">8</span>);<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;<br>        <span class="hljs-attribute">-webkit-transform-origin</span>: <span class="hljs-number">50%</span> -<span class="hljs-number">100px</span>;<br>        <span class="hljs-attribute">-webkit-animation</span>: swing <span class="hljs-number">5s</span> infinite ease-in-out;<br>        <span class="hljs-attribute">box-shadow</span>: -<span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">30px</span> <span class="hljs-number">4px</span> <span class="hljs-number">#fc903d</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.deng</span> &#123;<br>        <span class="hljs-attribute">position</span>: relative;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">90px</span>;<br>        <span class="hljs-attribute">margin</span>: <span class="hljs-number">50px</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-number">#d8000f</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">216</span>, <span class="hljs-number">0</span>, <span class="hljs-number">15</span>, .<span class="hljs-number">8</span>);<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;<br>        <span class="hljs-attribute">-webkit-transform-origin</span>: <span class="hljs-number">50%</span> -<span class="hljs-number">100px</span>;<br>        <span class="hljs-attribute">-webkit-animation</span>: swing <span class="hljs-number">3s</span> infinite ease-in-out;<br>        <span class="hljs-attribute">box-shadow</span>: -<span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">50px</span> <span class="hljs-number">4px</span> <span class="hljs-number">#fa6c00</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.deng-a</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">90px</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-number">#d8000f</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">216</span>, <span class="hljs-number">0</span>, <span class="hljs-number">15</span>, .<span class="hljs-number">1</span>);<br>        <span class="hljs-attribute">margin</span>: <span class="hljs-number">12px</span> <span class="hljs-number">8px</span> <span class="hljs-number">8px</span> <span class="hljs-number">8px</span>;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;<br>        <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#dc8f03</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.deng-b</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">45px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">90px</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-number">#d8000f</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">216</span>, <span class="hljs-number">0</span>, <span class="hljs-number">15</span>, .<span class="hljs-number">1</span>);<br>        <span class="hljs-attribute">margin</span>: -<span class="hljs-number">4px</span> <span class="hljs-number">8px</span> <span class="hljs-number">8px</span> <span class="hljs-number">26px</span>;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span> <span class="hljs-number">50%</span>;<br>        <span class="hljs-attribute">border</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#dc8f03</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.xian</span> &#123;<br>        <span class="hljs-attribute">position</span>: absolute;<br>        <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">60px</span>;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">2px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-number">#dc8f03</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.shui-a</span> &#123;<br>        <span class="hljs-attribute">position</span>: relative;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">5px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>        <span class="hljs-attribute">margin</span>: -<span class="hljs-number">5px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">59px</span>;<br>        <span class="hljs-attribute">-webkit-animation</span>: swing <span class="hljs-number">4s</span> infinite ease-in-out;<br>        <span class="hljs-attribute">-webkit-transform-origin</span>: <span class="hljs-number">50%</span> -<span class="hljs-number">45px</span>;<br>        <span class="hljs-attribute">background</span>: orange;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.shui-b</span> &#123;<br>        <span class="hljs-attribute">position</span>: absolute;<br>        <span class="hljs-attribute">top</span>: <span class="hljs-number">14px</span>;<br>        <span class="hljs-attribute">left</span>: -<span class="hljs-number">2px</span>;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-number">#dc8f03</span>;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.shui-c</span> &#123;<br>        <span class="hljs-attribute">position</span>: absolute;<br>        <span class="hljs-attribute">top</span>: <span class="hljs-number">18px</span>;<br>        <span class="hljs-attribute">left</span>: -<span class="hljs-number">2px</span>;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">35px</span>;<br>        <span class="hljs-attribute">background</span>: orange;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span><br>    &#125;<br><br>    <span class="hljs-selector-class">.deng</span><span class="hljs-selector-pseudo">:before</span> &#123;<br>        <span class="hljs-attribute">position</span>: absolute;<br>        <span class="hljs-attribute">top</span>: -<span class="hljs-number">7px</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">29px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">60px</span>;<br>        <span class="hljs-attribute">content</span>: <span class="hljs-string">" "</span>;<br>        <span class="hljs-attribute">display</span>: block;<br>        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">999</span>;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span> <span class="hljs-number">5px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-attribute">border</span>: solid <span class="hljs-number">1px</span> <span class="hljs-number">#dc8f03</span>;<br>        <span class="hljs-attribute">background</span>: orange;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(to right, #dc8f03, orange, #dc8f03, orange, #dc8f03)<br>    &#125;<br><br>    <span class="hljs-selector-class">.deng</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>        <span class="hljs-attribute">position</span>: absolute;<br>        <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">7px</span>;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">60px</span>;<br>        <span class="hljs-attribute">content</span>: <span class="hljs-string">" "</span>;<br>        <span class="hljs-attribute">display</span>: block;<br>        <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">20px</span>;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">5px</span>;<br>        <span class="hljs-attribute">border</span>: solid <span class="hljs-number">1px</span> <span class="hljs-number">#dc8f03</span>;<br>        <span class="hljs-attribute">background</span>: orange;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(to right, #dc8f03, orange, #dc8f03, orange, #dc8f03)<br>    &#125;<br><br>    <span class="hljs-selector-class">.deng-t</span> &#123;<br>        <span class="hljs-attribute">font-family</span>: 黑体, Arial, Lucida Grande, Tahoma, sans-serif;<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">3.2rem</span>;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#dc8f03</span>;<br>        <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">700</span>;<br>        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">85px</span>;<br>        <span class="hljs-attribute">text-align</span>: center<br>    &#125;<br><br>    <span class="hljs-selector-class">.night</span> <span class="hljs-selector-class">.deng-box</span>,<br>    <span class="hljs-selector-class">.night</span> <span class="hljs-selector-class">.deng-box1</span>,<br>    <span class="hljs-selector-class">.night</span> <span class="hljs-selector-class">.deng-t</span> &#123;<br>        <span class="hljs-attribute">background</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-meta">!important</span><br>    &#125;<br><br>    <span class="hljs-keyword">@-moz-keyframes</span> swing &#123;<br>        0% &#123;<br>            <span class="hljs-attribute">-moz-transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">10deg</span>)<br>        &#125;<br><br>        50% &#123;<br>            <span class="hljs-attribute">-moz-transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">10deg</span>)<br>        &#125;<br><br>        100% &#123;<br>            <span class="hljs-attribute">-moz-transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">10deg</span>)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">@-webkit-keyframes</span> swing &#123;<br>        0% &#123;<br>            <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">10deg</span>)<br>        &#125;<br><br>        50% &#123;<br>            <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">10deg</span>)<br>        &#125;<br><br>        100% &#123;<br>            <span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">10deg</span>)<br>        &#125;<br>    &#125;<br></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><p><img src="https://qiniuyun.fxhstudy.com/%E5%A5%BD%E7%94%A8%E7%9A%84JS%E4%BB%A3%E7%A0%811.png" srcset="/img/loading.gif" alt="效果图"></p><h2 id="LinkCard"><a href="#LinkCard" class="headerlink" title="LinkCard"></a>LinkCard</h2><p class="note note-success">    放入head文件中即可LinkCard<br>    < script src="https://cdn.jsdelivr.net/gh/Sanarous/files@1.13/js/linkcard.js"> < /script>  <br></p><p>用的时候需要加上以下代码</p><p class="note note-success">    < a href="https://fxhstudy.com" class="LinkCard">工具人小方< /a></p><p>效果如下</p><p><a href="https://fxhstudy.com" class="LinkCard">工具人小方</a></p><br><br><br><p style="font-size: 20px">持续更新中...</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;春节灯笼&quot;&gt;&lt;a href=&quot;#春节灯笼&quot; class=&quot;headerlink&quot; title=&quot;春节灯笼&quot;&gt;&lt;/a&gt;春节灯笼&lt;/h2&gt;&lt;p class=&quot;note note-success&quot;&gt;
    放入head文件中即可实现春节灯笼&lt;br&gt;
    &lt; scr
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>提问的智慧</title>
    <link href="https://fxhstudy.com/article/fb3832f5.html"/>
    <id>https://fxhstudy.com/article/fb3832f5.html</id>
    <published>2021-02-22T12:43:56.000Z</published>
    <updated>2021-02-23T15:30:45.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>  <p>提问的智慧, 来自艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）</p>  <p>这是一篇长文，看完需要十几分钟的时间。如果之前没有认真看过并且思考过，这十几分钟会改变你的职业生涯。这文章可能会出现一些让人不适的词语或者过时的例子，但我认为这不会影响它要表达的内容，而你需要好好琢磨作者的思想。</p>  <p>《提问的智慧》是一个敲门砖，它把黑客间的礼仪和准则明白地写下来，让我们了解到一个事实，为什么那些看起来很牛的人几乎从不提问。其实他们也有问题，但是通常在提问之前就自己解决了。不是因为他们本来就牛，而是解决问题的经历让他们成为牛人。最终，你只会看到网络上多了一篇文章：关于解决XXX问题的方案。</p>  <p>要不要花十几分钟改变自己的人生，决定权在自己。</p> </blockquote><p>原文的Github☞<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md" target="_blank" rel="noopener">How-To-Ask-Questions-The-Smart-Way</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在<a href="http://www.catb.org/~esr/faqs/hacker-howto.html" target="_blank" rel="nofollow noopener">黑客</a>的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。</p><p>不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件<strong>好事</strong>；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。</p><p>首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，"好问题！"是诚挚的大力称赞。</p><p>尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。</p><p>我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 <code>失败者（撸瑟）</code> （由于历史原因，我们有时把它拼作 <code>lusers</code>）。</p><p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。</p><p>我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答<code>赢家（winner）</code>的问题。</p><p>如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。</p><p>所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。</p><p>如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。</p><p>（欢迎对本指南提出改进意见。你可以 email 你的建议至 <a href="/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。然而请注意，本文并非<a href="http://www.ietf.org/rfc/rfc1855.txt" target="_blank" rel="nofollow noopener">网络礼节</a>的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。</p><h2 id="在提问之前"><a href="#在提问之前" class="headerlink" title="在提问之前"></a>在提问之前</h2><p>在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：</p><ol><li>尝试在你准备提问的论坛的旧文章中搜索答案。</li><li>尝试上网搜索以找到答案。</li><li>尝试阅读手册以找到答案。</li><li>尝试阅读常见问题文件（FAQ）以找到答案。</li><li>尝试自己检查或试验以找到答案。</li><li>向你身边的强者朋友打听以找到答案。</li><li>如果你是程序开发者，请尝试阅读源代码以找到答案。</li></ol><p>当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所<strong>学到</strong>的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。</p><p>运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 <a href="http://groups.google.com/" target="_blank" rel="nofollow noopener">Google 论坛</a>和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 <code>我在 Google 中搜过下列句子但没有找到什么有用的东西</code> 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。</p><p>别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。</p><p>准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。</p><p>小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着<code>蠢问题…</code>， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。</p><p>绝不要自以为<strong>够格</strong>得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去<strong>挣到</strong>一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。</p><p>另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。<code>谁能给点提示？</code>、<code>我的这个例子里缺了什么？</code>以及<code>我应该检查什么地方</code>比<code>请把我需要的确切的过程贴出来</code>更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。</p><h2 id="当你提问时"><a href="#当你提问时" class="headerlink" title="当你提问时"></a>当你提问时</h2><h3 id="慎选提问的论坛"><a href="#慎选提问的论坛" class="headerlink" title="慎选提问的论坛"></a>慎选提问的论坛</h3><p>小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：</p><ul><li>在与主题不合的论坛上贴出你的问题。</li><li>在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。</li><li>在太多的不同新闻群组上重复转贴同样的问题（cross-post）。</li><li>向既非熟人也没有义务解决你问题的人发送私人电邮。</li></ul><p>黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。</p><p>因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括<strong>阅读</strong> FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。</p><p>向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。</p><p>在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p><p>别像机关枪似的一次"扫射"所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。</p><p>搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。</p><p>一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。</p><p>可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。</p><h3 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h3><p>搜索，<strong>然后</strong> 在 Stack Exchange 问。</p><p>近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。</p><p>因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。</p><p>Stack Exchange 已经成长到<a href="http://stackexchange.com/sites" target="_blank" rel="nofollow noopener">超过一百个网站</a>，以下是最常用的几个站：</p><ul><li>Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。</li><li>Stack Overflow 是问写程序有关的问题。</li><li>Server Fault 是问服务器和网管相关的问题。</li></ul><h3 id="网站和-IRC-论坛"><a href="#网站和-IRC-论坛" class="headerlink" title="网站和 IRC 论坛"></a>网站和 IRC 论坛</h3><p>本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。</p><p>事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 "用<strong>我们的</strong>版本"。</p><p>在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p><p>通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。</p><p>在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。</p><h3 id="第二步，使用项目邮件列表"><a href="#第二步，使用项目邮件列表" class="headerlink" title="第二步，使用项目邮件列表"></a>第二步，使用项目邮件列表</h3><p>当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：</p><ul><li>任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。</li><li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。</li><li>大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li><li>如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li></ul><p>如果一个项目既有"使用者" 也有"开发者"（或"黑客"）邮件列表或论坛，而你又不会动到那些源代码，那么就向"使用者"列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。</p><p>然而，如果你<strong>确信</strong>你的问题很特别，而且在"使用者" 列表或论坛中几天都没有回复，可以试试前往"开发者"列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p><p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p><h3 id="使用有意义且描述明确的标题"><a href="#使用有意义且描述明确的标题" class="headerlink" title="使用有意义且描述明确的标题"></a>使用有意义且描述明确的标题</h3><p>在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的<code>帮帮忙</code>、<code>跪求</code>、<code>急</code>（更别说<code>救命啊！！！！</code>这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。</p><p>一个好标题范例是<code>目标 —— 差异</code>式的描述，许多技术支持组织就是这样做的。在<code>目标</code>部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p><blockquote><p>蠢问题：救命啊！我的笔记本电脑不能正常显示了！</p></blockquote><blockquote><p>聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。</p></blockquote><blockquote><p>更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。</p></blockquote><p>编写<code>目标 —— 差异</code> 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境<strong>和</strong>你遇到的问题。</p><p>总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。</p><p>如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 <code>Re: 测试</code> 或者 <code>Re: 新 bug</code> 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。</p><p>对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。</p><p>仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。</p><p>在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你<strong>只想</strong>在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。</p><h3 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h3><p>以<code>请将你的回复发送到……</code>来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，<a href="http://linuxmafia.com/faq/Mail/muas.html" target="_blank" rel="nofollow noopener">换个好点的</a>；如果是操作系统不支持这种邮件程序，也换个好点的。</p><p>在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如<code>追踪此讨论串</code>、<code>有回复时发送邮件提醒</code>等功能。</p><h3 id="用清晰、正确、精准且语法正确的语句"><a href="#用清晰、正确、精准且语法正确的语句" class="headerlink" title="用清晰、正确、精准且语法正确的语句"></a>用清晰、正确、精准且语法正确的语句</h3><p>我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。</p><p>正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它<strong>必须很</strong>准确，而且有迹象表明你是在思考和关注问题。</p><p>正确地拼写、使用标点和大小写，不要将<code>its</code>混淆为<code>it's</code>，<code>loose</code>搞成<code>lose</code>或者将<code>discrete</code>弄成<code>discreet</code>。不要<strong>全部用大写</strong>，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。<a href="http://en.wikipedia.org/wiki/Alan_Cox" target="_blank" rel="nofollow noopener">Alan Cox</a> 也许可以这样做，但你不行）。</p><p>更白话的说，如果你写得像是个半文盲[译注：<a href="http://zh.wikipedia.org/wiki/%E5%B0%8F%E7%99%BD" target="_blank" rel="nofollow noopener">小白</a>]，那多半得不到理睬。也不要使用即时通信中的简写或<a href="http://zh.wikipedia.org/wiki/%E7%81%AB%E6%98%9F%E6%96%87" target="_blank" rel="nofollow noopener">火星文</a>，如将<code>的</code>简化为<code>d</code>会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p><p>如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。</p><p>如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：[译注：以下附上原文以供使用]</p><blockquote><p>English is not my native language; please excuse typing errors.</p></blockquote><ul><li>英文不是我的母语，请原谅我的错字或语法。</li></ul><blockquote><p>If you speak $LANGUAGE, please email/PM me;I may need assistance translating my question.</p></blockquote><ul><li>如果你说<strong>某语言</strong>，请寄信/私讯给我；我需要有人协助我翻译我的问题。</li></ul><blockquote><p>I am familiar with the technical terms,but some slang expressions and idioms are difficult for me.</p></blockquote><ul><li>我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。</li></ul><blockquote><p>I've posted my question in $LANGUAGE and English.I'll be glad to translate responses, if you only use one or the other.</p></blockquote><ul><li>我把我的问题用<strong>某语言</strong>和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。</li></ul><h3 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h3><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p><ul><li>使用纯文字而不是 HTML (<a href="http://archive.birdhouse.org/etc/evilmail.html" target="_blank" rel="nofollow noopener">关闭 HTML</a> 并不难）。</li><li>使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。</li><li>不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。</li><li>但是，对一些特殊的文件<strong>不要</strong>设置固定宽度（譬如日志档案拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。</li><li>在英语论坛中，不要使用<code>Quoted-Printable</code> MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的<code>=20</code>符号既难看也分散注意力，甚至有可能破坏内容的语意。</li><li>绝对，<strong>永远</strong>不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。</li><li>如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的<code>智能引号</code>功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉<code>智能引号</code>单选框），以免在你的邮件中到处散布垃圾字符。</li><li>在论坛，勿滥用<code>表情符号</code>和<code>HTML</code>功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。</li></ul><p>如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的<code>查看源代码</code>命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。</p><h3 id="精确地描述问题并言之有物"><a href="#精确地描述问题并言之有物" class="headerlink" title="精确地描述问题并言之有物"></a>精确地描述问题并言之有物</h3><ul><li>仔细、清楚地描述你的问题或 Bug 的症状。</li><li>描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：<code>Fedora Core 4</code>、<code>Slackware 9.1</code>等）。</li><li>描述在提问前你是怎样去研究和理解这个问题的。</li><li>描述在提问前为确定问题而采取的诊断步骤。</li><li>描述最近做过什么可能相关的硬件或软件变更。</li><li>尽可能的提供一个可以<code>重现这个问题的可控环境</code>的方法。</li></ul><p>尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。</p><p>以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。</p><p><a href="http://www.chiark.greenend.org.uk/~sgtatham/" target="_blank" rel="nofollow noopener">Simon Tatham</a> 写过一篇名为《<a href="http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html" target="_blank" rel="nofollow noopener">如何有效的报告 Bug</a>》的出色文章。强力推荐你也读一读。</p><h3 id="话不在多而在精"><a href="#话不在多而在精" class="headerlink" title="话不在多而在精"></a>话不在多而在精</h3><p>你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。</p><p>这样做的用处至少有三点。第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；第二，简化问题使你更有可能得到<strong>有用</strong>的答案；第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。</p><h3 id="别动辄声称找到-Bug"><a href="#别动辄声称找到-Bug" class="headerlink" title="别动辄声称找到 Bug"></a>别动辄声称找到 Bug</h3><p>当你在使用软件中遇到问题，除非你非常、<strong>非常</strong>的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的<code>Bug</code>，你应该能提供相应位置的修正或替代文件。</p><p>请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前<a href="#%E5%9C%A8%E6%8F%90%E9%97%AE%E4%B9%8B%E5%89%8D">已经做了这些，是吧</a>？）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p><p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有<code>Bug</code>时，这尤其严重。</p><p>提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是<strong>你</strong>做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。</p><h3 id="低声下气不能代替你的功课"><a href="#低声下气不能代替你的功课" class="headerlink" title="低声下气不能代替你的功课"></a>低声下气不能代替你的功课</h3><p>有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：<code>我知道我只是个可悲的新手，一个撸瑟，但...</code>。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。</p><p>别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。</p><p>有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。</p><h3 id="描述问题症状而非你的猜测"><a href="#描述问题症状而非你的猜测" class="headerlink" title="描述问题症状而非你的猜测"></a>描述问题症状而非你的猜测</h3><p>告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。</p><p><strong>蠢问题</strong></p><blockquote><p>我在编译内核时接连遇到 SIG11 错误，我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组），256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。所有内存都换过了，没有效果。相关部分的标准编译记录如下…。</p></blockquote><p>由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：<code>所有的诊断专家都来自密苏里州。</code> 美国国务院的官方座右铭则是：<code>让我看看</code>（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：<code>我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。</code>） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！</p><h3 id="按发生时间先后列出问题症状"><a href="#按发生时间先后列出问题症状" class="headerlink" title="按发生时间先后列出问题症状"></a>按发生时间先后列出问题症状</h3><p>问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</p><p>如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，<code>多</code>不等于<code>好</code>。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。</p><p>如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。</p><h3 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h3><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p><p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p><p><strong>蠢问题</strong></p><blockquote><p>我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。</p></blockquote><p>第二种提问法比较聪明，你可能得到像是<code>建议采用另一个更合适的工具</code>的回复。</p><h3 id="别要求使用私人电邮回复"><a href="#别要求使用私人电邮回复" class="headerlink" title="别要求使用私人电邮回复"></a>别要求使用私人电邮回复</h3><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。</p><p>当你要求私下回复时，这个过程和奖励都被中止。别这样做，让<strong>回复者</strong>来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。</p><p>这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是<code>向我发电邮，我将为论坛归纳这些回复</code>。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。</p><h3 id="清楚明确的表达你的问题以及需求"><a href="#清楚明确的表达你的问题以及需求" class="headerlink" title="清楚明确的表达你的问题以及需求"></a>清楚明确的表达你的问题以及需求</h3><p>漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。</p><p>如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。</p><p>要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。</p><p>所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问<code>我想更好的理解 X，可否指点一下哪有好一点说明？</code>通常比问<code>你能解释一下 X 吗？</code>更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。</p><h3 id="询问有关代码的问题时"><a href="#询问有关代码的问题时" class="headerlink" title="询问有关代码的问题时"></a>询问有关代码的问题时</h3><p>别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：<code>它不能工作</code>会让你完全被忽略。只贴几十行代码，然后说一句：<code>在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;</code>比较有可能让你得到回应。</p><p>最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能<strong>刚好</strong>展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看<a href="#%E8%AF%9D%E4%B8%8D%E5%9C%A8%E5%A4%9A%E8%80%8C%E5%9C%A8%E7%B2%BE">话不在多而在精</a>一节）。</p><p>一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。</p><p>如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p><h3 id="别把自己家庭作业的问题贴上来"><a href="#别把自己家庭作业的问题贴上来" class="headerlink" title="别把自己家庭作业的问题贴上来"></a>别把自己家庭作业的问题贴上来</h3><p>黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由<strong>你</strong>来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。</p><p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的<strong>使用者</strong>邮件列表或论坛中提问。尽管黑客们<strong>会</strong>看出来，但一些有经验的使用者也许仍会给你一些提示。</p><h3 id="去掉无意义的提问句"><a href="#去掉无意义的提问句" class="headerlink" title="去掉无意义的提问句"></a>去掉无意义的提问句</h3><p>避免用无意义的话结束提问，例如<code>有人能帮我吗？</code>或者<code>这有答案吗？</code>。</p><p>首先：如果你对问题的描述不是很好，这样问更是画蛇添足。</p><p>其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：<code>没错，有人能帮你</code>或者<code>不，没答案</code>。</p><p>一般来说，避免用 <code>是或否</code>、<code>对或错</code>、<code>有或没有</code>类型的问句，除非你想得到<a href="http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/questions-with-yes-or-no-answers.html" target="_blank" rel="nofollow noopener">是或否类型的回答</a>。</p><h3 id="即使你很急也不要在标题写紧急"><a href="#即使你很急也不要在标题写紧急" class="headerlink" title="即使你很急也不要在标题写紧急"></a>即使你很急也不要在标题写<code>紧急</code></h3><p>这是你的问题，不是我们的。宣称<code>紧急</code>极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，<code>紧急</code>这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。</p><p>有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。</p><p>当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如<code>紧急：帮我救救这个毛绒绒的小海豹！</code>肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。</p><p>如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。</p><h3 id="礼多人不怪，而且有时还很有帮助"><a href="#礼多人不怪，而且有时还很有帮助" class="headerlink" title="礼多人不怪，而且有时还很有帮助"></a>礼多人不怪，而且有时还很有帮助</h3><p>彬彬有礼，多用<code>请</code>和<code>谢谢您的关注</code>，或<code>谢谢你的关照</code>。让大家都知道你对他们花时间免费提供帮助心存感激。</p><p>坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）</p><p>然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。</p><p>（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得<code>先谢了</code>意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说<code>先谢了</code>，<strong>然后</strong>事后再对回复者表示感谢，或者换种方式表达感激，譬如用<code>谢谢你的关注</code>或<code>谢谢你的关照</code>。）</p><h3 id="问题解决后，加个简短的补充说明"><a href="#问题解决后，加个简短的补充说明" class="headerlink" title="问题解决后，加个简短的补充说明"></a>问题解决后，加个简短的补充说明</h3><p>问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。</p><p>最理想的方式是向最初提问的话题回复此消息，并在标题中包含<code>已修正</code>，<code>已解决</code>或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串<code>问题 X</code>和<code>问题 X - 已解决</code>的潜在回复者就明白不用再浪费时间了（除非他个人觉得<code>问题 X</code>的有趣），因此可以利用此时间去解决其它问题。</p><p>补充说明不必很长或是很深入；简单的一句<code>你好，原来是网线出了问题！谢谢大家 – Bill</code>比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。</p><p>对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此<strong>之后</strong>才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。</p><p>除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。</p><p>至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。</p><p>思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。</p><p>在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。</p><h2 id="如何解读答案"><a href="#如何解读答案" class="headerlink" title="如何解读答案"></a>如何解读答案</h2><p><a id="user-content-rtfm"></a></p><h3 id="RTFM-和-STFW：如何知道你已完全搞砸了"><a href="#RTFM-和-STFW：如何知道你已完全搞砸了" class="headerlink" title="RTFM 和 STFW：如何知道你已完全搞砸了"></a>RTFM 和 STFW：如何知道你已完全搞砸了</h3><p>有一个古老而神圣的传统：如果你收到<code>RTFM （Read The Fucking Manual）</code>的回应，回答者认为你<strong>应该去读他妈的手册</strong>。当然，基本上他是对的，你应该去读一读。</p><p>RTFM 有一个年轻的亲戚。如果你收到<code>STFW（Search The Fucking Web）</code>的回应，回答者认为你<strong>应该到他妈的网上搜索</strong>。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 <strong><a href="http://lmgtfy.com/" target="_blank" rel="nofollow noopener">Google 是你的朋友</a></strong>！）</p><p>在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。</p><p>通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为</p><ul><li><strong>你需要的信息非常容易获得</strong>；</li><li><strong>你自己去搜索这些信息比灌给你，能让你学到更多</strong>。</li></ul><p>你不应该因此不爽；<strong>依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见</strong>。你应该对他祖母般的慈祥表示感谢。</p><h3 id="如果还是搞不懂"><a href="#如果还是搞不懂" class="headerlink" title="如果还是搞不懂"></a>如果还是搞不懂</h3><p>如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。</p><p>比方说，如果我回答你：<code>看来似乎是 zentry 卡住了；你应该先清除它。</code>，然后，这是一个<strong>很糟的</strong>后续问题回应：<code>zentry 是什么？</code> <strong>好</strong>的问法应该是这样：<code>哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？</code></p><h3 id="处理无礼的回应"><a href="#处理无礼的回应" class="headerlink" title="处理无礼的回应"></a>处理无礼的回应</h3><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。</p><p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这<strong>没有</strong>发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而<strong>你</strong>将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p><p>另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p><p>（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会<strong>正常</strong>交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们<strong>喜欢</strong>我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。</p><p>Jeff Bigler 的观察总结和这个相关也值得一读 (<strong><a href="http://www.mit.edu/~jcb/tact.html" target="_blank" rel="nofollow noopener">tact filters</a></strong>)。</p><p>在下一节，我们会谈到另一个问题，当<strong>你</strong>行为不当时所会受到的<code>冒犯</code>。</p><h2 id="如何避免扮演失败者"><a href="#如何避免扮演失败者" class="headerlink" title="如何避免扮演失败者"></a>如何避免扮演失败者</h2><p>在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。</p><p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：</p><p>熬过去，这很正常。事实上，它是有益健康且合理的。</p><p>社区的标准不会自行维持，它们是通过参与者积极而<strong>公开地</strong>执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p><p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称<code>如果你不想帮助用户就闭嘴。</code> 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。</p><p>夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。</p><p>记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心<strong>你</strong>和<strong>他的社区</strong>而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。</p><p>有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是<strong>真的</strong>会把问题搞砸。</p><p>这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。</p><p>也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。</p><h2 id="不该问的问题"><a href="#不该问的问题" class="headerlink" title="不该问的问题"></a>不该问的问题</h2><p>以下是几个经典蠢问题，以及黑客没回答时心中所想的：</p><p>问题：<a href="#q1">我能在哪找到 X 程序或 X 资源？</a></p><p>问题：<a href="#q2">我怎样用 X 做 Y？</a></p><p>问题：<a href="#q3">如何设定我的 shell 提示？</a></p><p>问题：<a href="#q4">我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</a></p><p>问题：<a href="#q5">我的程序/设定/SQL 语句没有用</a></p><p>问题：<a href="#q6">我的 Windows 电脑有问题，你能帮我吗？</a></p><p>问题：<a href="#q7">我的程序不会动了，我认为系统工具 X 有问题</a></p><p>问题：<a href="#q8">我在安装 Linux（或者 X ）时有问题，你能帮我吗？</a></p><p>问题：<a href="#q9">我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</a></p><hr><p><a id="user-content-q1"></a></p><blockquote><p>问题：我能在哪找到 X 程序或 X 资源？</p></blockquote><p>回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 <a href="http://www.google.com" target="_blank" rel="nofollow noopener">Google</a> 吗？</p><p><a id="user-content-q2"></a></p><blockquote><p>问题：我怎样用 X 做 Y？</p></blockquote><p>回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。</p><p><a id="user-content-q3"></a></p><blockquote><p>问题：如何设定我的 shell 提示？？</p></blockquote><p>回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 <a href="#RTFM">RTFM</a>，然后自己去找出来。</p><p><a id="user-content-q4"></a></p><blockquote><p>问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</p></blockquote><p>回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。</p><p><a id="user-content-q5"></a></p><blockquote><p>问题：我的{程序/设定/SQL 语句}不工作</p></blockquote><p>回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种</p><ul><li>你还有什么要补充的吗？</li><li>真糟糕，希望你能搞定。</li><li>这关我屁事？</li></ul><p><a id="user-content-q6"></a></p><blockquote><p>问题：我的 Windows 电脑有问题，你能帮我吗？</p></blockquote><p>回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。</p><p>注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你<strong>可以</strong>问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。</p><p><a id="user-content-q7"></a></p><blockquote><p>问题：我的程序不会动了，我认为系统工具 X 有问题</p></blockquote><p>回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。</p><p><a id="user-content-q8"></a></p><blockquote><p>问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？</p></blockquote><p>回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在<a href="http://www.linux.org/groups/index.html" target="_blank" rel="nofollow noopener">这儿</a>找到使用者群组的清单）。</p><p>注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 <code>Linux</code> 和<strong>所有</strong>被怀疑的硬件作关键词仔细搜索。</p><p><a id="user-content-q9"></a></p><blockquote><p>问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</p></blockquote><p>回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！</p><h2 id="好问题与蠢问题"><a href="#好问题与蠢问题" class="headerlink" title="好问题与蠢问题"></a>好问题与蠢问题</h2><p>最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我可以在哪儿找到关于 Foonly Flurbamatic 的资料？</p></blockquote><p>这种问法无非想得到 <a href="#RTFM">STFW</a> 这样的回答。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我用 Google 搜索过 "Foonly Flurbamatic 2600"，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？</p></blockquote><p>这个问题已经 STFW 过了，看起来他真的遇到了麻烦。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我从 foo 项目找来的源码没法编译。它怎么这么烂？</p></blockquote><p>他觉得都是别人的错，这个傲慢自大的提问者。</p><p><strong>聪明问题</strong>：</p><blockquote><p>foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？</p></blockquote><p>提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我的主机板有问题了，谁来帮我？</p></blockquote><p>某黑客对这类问题的回答通常是：<code>好的，还要帮你拍拍背和换尿布吗？</code>，然后按下删除键。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？</p></blockquote><p>这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。</p><p>在最后一个问题中，注意<code>告诉我答案</code>和<code>给我启示，指出我还应该做什么诊断工作</code>之间微妙而又重要的区别。</p><p>事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。</p><p>通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。</p><p>事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的<strong>名</strong>人，而是因为我用了正确的方式来提问。</p><p>黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我<strong>像</strong>个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。</p><h2 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h2><p>如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。</p><p>总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。</p><p>你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。</p><p>有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。</p><p>另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。</p><p>对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。</p><h2 id="如何更好地回答问题"><a href="#如何更好地回答问题" class="headerlink" title="如何更好地回答问题"></a>如何更好地回答问题</h2><p><strong>态度和善一点</strong>。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p><p><strong>对初犯者私下回复</strong>。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。</p><p><strong>如果你不确定，一定要说出来</strong>！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p><p><strong>如果帮不了忙，也别妨碍他</strong>。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。</p><p><strong>试探性的反问以引出更多的细节</strong>。如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。</p><p>尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。</p><p><strong>如果你决定回答，就请给出好的答案</strong>。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。</p><p><strong>正面的回答问题</strong>！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 <code>试试看 A 或是 B</code> 或者 <code>试试 X 、 Y 、 Z 、 A 、 B 、 C</code> 并附上一个链接一点用都没有。</p><p><strong>帮助你的社区从问题中学习</strong>。当回复一个好问题时，问问自己<code>如何修改相关文件或常见问题文件以免再次解答同样的问题？</code>，接着再向文件维护者发一份补丁。</p><p>如果你是在研究一番后才做出的回答，<strong>展现你的技巧而不是直接端出结果</strong>。毕竟<code>授人以鱼不如授人以渔</code>。</p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/" target="_blank" rel="nofollow noopener">Unix 系统和网络基本原理</a>。</p><p>当你发布软件或补丁时，试着按<a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html" target="_blank" rel="nofollow noopener">软件发布实践</a>操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt; 
 &lt;p&gt;提问的智慧, 来自艾瑞克.史蒂文.雷蒙德（Eric Steven Raymond）&lt;/p&gt; 
 &lt;p&gt;这是一篇
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>如何修改Servlet模板</title>
    <link href="https://fxhstudy.com/article/b1b6990c.html"/>
    <id>https://fxhstudy.com/article/b1b6990c.html</id>
    <published>2021-02-19T04:47:54.000Z</published>
    <updated>2021-02-26T07:14:00.076Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录一下这个</p><p>Settings中搜索code Templates,找到File and Code Templates</p><img src="https://qiniuyun.fxhstudy.com/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9Servlet%E6%A8%A1%E6%9D%BF1.png" srcset="/img/loading.gif"><br><br>然后找到Web->Java code templates->Servlet Annotated Class.java<br><br><img src="https://qiniuyun.fxhstudy.com/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9Servlet%E6%A8%A1%E6%9D%BF2.png" srcset="/img/loading.gif"><br><br><p>这里我将doPost方法改一下，这样就可以再次创建Servlet文件时，会方便很多。</p><br><img src="https://qiniuyun.fxhstudy.com/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9Servlet%E6%A8%A1%E6%9D%BF3.png" srcset="/img/loading.gif">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里记录一下这个&lt;/p&gt;
&lt;p&gt;Settings中搜索code Templates,找到File and Code Templates&lt;/p&gt;
&lt;img src=&quot;https://qiniuyun.fxhstudy.com/%E5%A6%82%E4%BD%95%E4%BF%
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="IDEA" scheme="https://fxhstudy.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>异常An invalid character [32] was present in the Cookie value</title>
    <link href="https://fxhstudy.com/article/b1e6424d.html"/>
    <id>https://fxhstudy.com/article/b1e6424d.html</id>
    <published>2021-02-13T12:22:19.000Z</published>
    <updated>2021-02-16T07:18:40.625Z</updated>
    
    <content type="html"><![CDATA[<p>在用到Cookie记录用户访问时间时，页面报错</p><p><font color="#FF6B68" size="4" face="Open Sans">An invalid character [32] was present in the Cookie value<br></font></p><p>32在ASCII码表中，是space(空格)，</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java">SimpleDateFormat sdf = <span class="hljs-keyword">new</span> SimpleDateFormat(<span class="hljs-string">"yyyy年MM月dd日 HH:mm:ss"</span>);<br></code></pre></div></td></tr></table></figure><p>其中错误的原因是虽然Cookie中支持中文，但是对于特殊的字符还是不支持</p><p>所以这里的解决办法是，将Cookie进行URL的编解码即可</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//编码</span><br>URLEncoder.encode(String s)<br><span class="hljs-comment">//解码</span><br>URLEncoder.decode(String s)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在用到Cookie记录用户访问时间时，页面报错&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#FF6B68&quot; size=&quot;4&quot; face=&quot;Open Sans&quot;&gt;An invalid character [32] was present in the Cookie value&lt;
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="异常" scheme="https://fxhstudy.com/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>学外语是如何毁了我[B站]</title>
    <link href="https://fxhstudy.com/article/1ed1bfc3.html"/>
    <id>https://fxhstudy.com/article/1ed1bfc3.html</id>
    <published>2021-02-12T08:42:49.000Z</published>
    <updated>2021-02-12T09:35:31.294Z</updated>
    
    <content type="html"><![CDATA[<p>B站大家都知道，你能够找到很多优秀的视频，我在B站上大学可不是闹着玩的，这里分享一位up猪很优秀的视频,采用了纪录片的形式来讨论作者在学习外语的一些想法和观点,”学外语是如何毁了我”,开始我以为会说一些学外语的坏处的，u1s1,我英语不是很好，所以看到这个标题正好(找个借口?)来掩饰我不是不想学，而是学外语会毁了我。然鹅并不是</p><p><font color="#856363" size="4" face="Open Sans">“The bigger the circle of the known, the larger the contact with the unknown<br>&nbsp;&nbsp;&nbsp;&nbsp;所知越多，与无知的边界就越大”<br></font></p><p>其实就是知道的越少，越不痛苦。。。<br><br></p><iframe src="//player.bilibili.com/player.html?aid=756571650&bvid=BV1sr4y1P7P7&cid=293550514&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="641"></iframe><p><br><br></p><font color="#856363" size="4" face="Open Sans"><p>in summer 2015 when i was walking by magus books<br>在2015年夏天，当我走过玛格斯书籍时</p><p>my favorite bookstore in seattle at three o’clock in the morning<br>我早上三点钟在西雅图最喜欢的书店</p><p>my eyes were immediately caught by the title of a book<br>我的眼睛立刻被一本书的标题所吸引</p><p>and the yellow glim behind the window so i went there the next morning<br>和窗户后面的黄色微光，所以我第二天早上去了那里</p><p>bought it and read it the book is probably not the best collection of<br>买了下来，读了下来，这本书可能不是最好的收藏。</p><p>essays i’ve ever read but the title has since then stayed with<br>我读过的论文，但从那时起标题就一直保留</p><p>me the moral obligation to be intelligent<br>我的道德义务是要有智慧</p><p>what does that have to do with learning languages does speaking foreign<br>说外语与学习语言有什么关系</p><p>languages make you more intelligent it depends is the ability to speak<br>语言使您更聪明，这取决于说话能力</p><p>another language part of intelligence not necessarily<br>智力的另一种语言部分不一定</p><p>but being intelligent and knowing for all languages<br>但要聪明，懂所有语言</p><p>do share one thing in common they’re both painful<br>确实有共同点，他们俩都很痛苦</p><p>and by painful i don’t mean the annuity of tediously long lectures<br>痛苦的是，我指的不是冗长的演讲的年金</p><p>or vocabulary and grammatical studies or the expense of time for the pursuit of<br>或词汇和语法研究，或花费时间追求</p><p>wisdom and knowledge nor even the loneliness<br>智慧和知识，甚至寂寞</p><p>your dedication to the endeavor could bring up on you<br>您对这项事业的奉献可以助您一臂之力</p><p>the pain the true torment is the confusion for the bigger the circle of<br>痛苦，真正的折磨是对更大圈子的困惑</p><p>the known the greater the contact with the unknown<br>已知者与未知者的联系越多</p><p>and the more firmly unlearned beliefs used to stand the more helplessly your<br>越是坚定地学习过的信念，就越无助于您</p><p>new identity totters if you’re lucky enough to study<br>如果您有足够的学习机会，那么新的身份就会tter跷</p><p>farsi you may realize that not all the<br>波斯语，您可能会意识到，并非所有</p><p>beautiful poetry is written in your mother tongue<br>美丽的诗歌是用你的母语写的</p><p>the persian epics written in the sassanid empire<br>萨桑帝国写的波斯史诗</p><p>are as beautiful as poems of the tang dynasty<br>和唐诗一样美</p><p>if you happen to study spanish you may realize that<br>如果您碰巧学习西班牙语，您可能会意识到</p><p>what you thought so unique an aspect of your culture<br>您认为如此独特的文化方面</p><p>has a similar counterpart in another culture<br>在另一种文化中有类似的对应者</p><p>that the puerto rican amorthia is almost identical<br>波多黎各阿莫里西亚几乎是相同的</p><p>with the korean sunday if russian is your language<br>如果您的语言是朝鲜周日</p><p>you may realize that not all the important battles<br>您可能会意识到，并非所有重要的战斗</p><p>that change the course of human history were fought on your native land<br>改变人类历史进程的斗争是在您的祖国</p><p>that the russian defeat of the golden horde at the field of kulikova<br>俄罗斯在库利科娃（Kulikova）战败了金帐汗国</p><p>is no less significant than the reconquest of granada<br>不亚于格拉纳达的重新征服</p><p>in spain can’t you do this by reading history<br>在西班牙，您不能通过阅读历史记录来做到这一点</p><p>one may ask yes but history written by whom<br>一个人可能会问，但是历史是由谁写的</p><p>and for whom because you see after learning a language<br>对于谁，因为您在学习语言后会看到</p><p>if you care enough part of you becomes the member of the tribe<br>如果您足够在意您成为部落成员的话</p><p>to which the language belongs and that cultural schizophrenia<br>语言所属的文化精神分裂症</p><p>can be truly excruciating that pain however<br>可以真正消除这种痛苦</p><p>can be easily offset but the better chances of employment in your job market<br>可以很容易地抵消，但在您的就业市场上有更好的就业机会</p><p>or the simple pleasures of impressing your friends<br>或打动朋友的简单乐趣</p><p>at the dinner table with political intrigues and historical anecdotes<br>在饭桌上摆着政治阴谋和历史轶事</p><p>played out in five different languages why then would anyone was not a crazy<br>用五种不同的语言表演，为什么没有人会发疯</p><p>masochist want to learn a foreign language yes<br>受虐狂想学习一门外语是</p><p>to communicate with people yes to travel to different places<br>与人交流是去不同的地方</p><p>yes to advance your career in a globalized world<br>是的，可以在全球化的世界中发展事业</p><p>yes it is good for your brain but more importantly<br>是的，它对您的大脑有好处，但更重要的是</p><p>as potentially excruciating as it is it is for those curious enough<br>对于那些好奇心十足的人</p><p>to see the world as it is and those brave enough<br>去看真实的世界，那些勇敢的人</p><p>to tear down the veils of bigotry instead of<br>揭开偏执的面纱，而不是</p><p>comfortably hiding behind the linguistic barrier and refusing to step forward<br>舒适地躲在语言障碍的后面，拒绝前进</p><p>and know your fellow human beings or even the so-called enemies<br>并认识你的人类，甚至是所谓的敌人</p><p>i am by no means accusing those not fond of foreign languages<br>我绝不是在指责那些不喜欢外语的人</p><p>of being cowards if anything they have to be forever more on their guard<br>胆小鬼，如果有的话，他们需要永远保持警惕</p><p>of the bigotries the fatuities and the language barrier<br>偏见的死亡和语言障碍</p><p>and constantly seek more reliable sources of information<br>并不断寻求更可靠的信息来源</p><p>indeed the pursuit of knowledge is almost by definition<br>确实，对知识的追求几乎是按照定义</p><p>a sort of masochism and language learning is no exception<br>某种受虐狂和语言学习也不例外</p><p>but in such pain and perhaps only in such pain<br>但在这样的痛苦中，也许只有在这样的痛苦中</p><p>can we overcome misunderstandings bridge cultures and civilizations<br>我们能否克服误解桥接文化和文明</p><p>and find a world of peace and prosperity<br>找到一个和平与繁荣的世界<br></font></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;B站大家都知道，你能够找到很多优秀的视频，我在B站上大学可不是闹着玩的，这里分享一位up猪很优秀的视频,采用了纪录片的形式来讨论作者在学习外语的一些想法和观点,”学外语是如何毁了我”,开始我以为会说一些学外语的坏处的，u1s1,我英语不是很好，所以看到这个标题正好(找个借口
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>如何解决Tomcat无法访问webapps文件夹下的文件</title>
    <link href="https://fxhstudy.com/article/ad4714aa.html"/>
    <id>https://fxhstudy.com/article/ad4714aa.html</id>
    <published>2021-02-09T15:54:57.000Z</published>
    <updated>2021-02-10T15:56:26.103Z</updated>
    
    <content type="html"><![CDATA[<p>这个我真的要说一下了，真的花了我一个多小时，<br>问题描述一下，用IDEA开启Tomcat时，发现不论怎么操作，都不能打开指定文件夹里面的文件，多次访问都是404。<br>查了很多很多资料，试了很多种方法，都不行。<br>然后就很烦，想了想是不是应该将文件放到resources文件夹中去，没想到成功了。于是我想是不是因为缓存问题，导致没有访问出来的原因，(当然这个是不可能的)或者其他原因。<br>之后做了很多次的测试，发现确实需要将要访问的文件添加到resources文件夹中去。重启Tomcat,这样才能够访问到。</p><p>但是当你将需要访问的文件放入resources文件中，但删除了webapp文件下的文件，这也是不能访问的。所以需要同时满足webapp下有文件，resources文件夹下也需要有文件。</p><p>同时我发现，将当webapp和resources文件下同时存在需要访问的文件时，重启Tomcat，此时再关闭Tomcat，删除resources文件夹下的文件，再开启，访问文件时，还是可以访问的。</p><p>这可能和Tomcat的部署有关系。原理我还没有弄明白，但知道了解决方法。<br>还是知识点不够，之后掌握里面的原理后，再来补充。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个我真的要说一下了，真的花了我一个多小时，&lt;br&gt;问题描述一下，用IDEA开启Tomcat时，发现不论怎么操作，都不能打开指定文件夹里面的文件，多次访问都是404。&lt;br&gt;查了很多很多资料，试了很多种方法，都不行。&lt;br&gt;然后就很烦，想了想是不是应该将文件放到resour
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="IDEA" scheme="https://fxhstudy.com/tags/IDEA/"/>
    
      <category term="Tomcat" scheme="https://fxhstudy.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>equal与==的区别</title>
    <link href="https://fxhstudy.com/article/74b2e088.html"/>
    <id>https://fxhstudy.com/article/74b2e088.html</id>
    <published>2021-02-09T04:55:33.000Z</published>
    <updated>2021-02-09T12:20:18.511Z</updated>
    
    <content type="html"><![CDATA[<blockquote>    原文链接: <a href="https://www.cnblogs.com/zhuyeshen/p/10954275.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuyeshen/p/10954275.html</a></blockquote><p>学而不思则罔,思而不学则殆。我认为学习不仅仅是学习新思，更多的是需要多思考我们曾经学过的东西，反复深究那些我们已经会的东西，由浅入深。<br>==与equal的区别我虽了解，但u1s1，没有很系统的学习过，这里转载了一篇有关==与equal之间的区别，分析得很详细。</p><p>equal与==</p><p>1.最大的区别是，==是运算符，equal是方法</p><p>简述几种情况下的equal与==</p><p>java基本类型<br>比较包装类型<br>比较String类型<br>比较对象<br>1.java基本类型（short，int，long，byte，char，float，double，boolean）</p><p>比较基本类型，只能用==，不能用equal，这里的==比较的是两个变量的值</p><p>2.比较包装类型</p><p>==比较的是内存地址，因为a和b是new出来的，是两个不同的对象，所以地址肯定是不同的，而equal比较的是值，附上源码</p><img src="https://qiniuyun.fxhstudy.com/equal%E4%B8%8E%3D%3D%E7%9A%84%E5%8C%BA%E5%88%AB.png" srcset="/img/loading.gif"><br><br><img src="https://qiniuyun.fxhstudy.com/equal%E4%B8%8E%3D%3D%E7%9A%84%E5%8C%BA%E5%88%AB1.png" srcset="/img/loading.gif"><p>3.比较String类型</p><p>==比较的是内存地址，equal比较的是值</p><p>这里给出一道题，来供参考</p><img src="https://qiniuyun.fxhstudy.com/equal%E4%B8%8E%3D%3D%E7%9A%84%E5%8C%BA%E5%88%AB2.png" srcset="/img/loading.gif"><p>这道题我们一步一步来解决，首先s1==s2，==比较的是内存地址，而s2是new出来的新对象，new String(“xxxx”)放在堆中，而s1的“xxxx”放在常量池中，所以比较结果是false</p><p>第二，s1==s5，字符串+的本质是创建了StringBulider对象进行append操作，然后将拼接后的StringBulider对象用toString进行处理，处理后生成的字符串放在字符串池中找有没有相同值的字符串，如果有将引用（s5）直接连接到已有的字符串地址，所以s1和s5的地址相同</p><p>第三，s1=s3+s4，这个的原理是涉及到类加载时初始化的问题，s3和s4的结果无法在编译期间确定，如果把s3和s4定义为final类型，结果就是true了，java在编译时，就知道“Program”+”ming”=”Programming”了，但却是在运行时才知道s3+s4=”Programming”</p><p>4.比较对象</p><p>==和equal比较的都是内存地址，因为equal没有被重写，没有被重写的equal都是object的equal方法</p><p>也能参考下面</p><p>1.“==”常用来比较基本数据类型，8种基本数据类型有byte、short、long、double、char、int、float、boolean，因为变量直接存储的就是他们的值，所以用”==”去比较，比较的就是他们的值。</p><p>但是复合数据类型用“==”比较的是他的堆内存地址。<br>2.“equals”对于复合数据类型比较的也是它的堆内存地址（不能作用于基本数据类型的变量）。</p><p>但在实际项目中常用来比较String字符串的内容相等是为什么呢？</p><p>那是因为对于String（还有Date，Integer）类型重写了equals方法，使其比较的是存储对象的内容是否相等，而不是堆内存地址。</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java">String str1 = <span class="hljs-string">"Hello"</span>;<br>String str5 = <span class="hljs-string">"Hello"</span>;<br>String str2 = <span class="hljs-keyword">new</span> String(<span class="hljs-string">"Hello"</span>);<br>String str4 = <span class="hljs-keyword">new</span> String(<span class="hljs-string">"Hello"</span>);<br>String str3 = str2; <span class="hljs-comment">// 引用传递，同一对象</span><br>System.out.println(str1 == str2); <span class="hljs-comment">// false（str2是new的一个新地址）</span><br>System.out.println(str1 == str3); <span class="hljs-comment">// false（str3和str2内存地址一样，和str1地址不同）</span><br>System.out.println(str2 == str3); <span class="hljs-comment">// true（引用str2，地址相同）</span><br>System.out.println(str1 == str5); <span class="hljs-comment">// true（String作为基本类型，没创建新地址）</span><br>System.out.println(str4 == str2); <span class="hljs-comment">// false（内存地址不同）</span><br>System.out.println(str1.equals(str2)); <span class="hljs-comment">// true（内容一致，都是“hello”）</span><br>System.out.println(str1.equals(str3)); <span class="hljs-comment">// true（内容一致，都是“hello”）</span><br>System.out.println(str2.equals(str3)); <span class="hljs-comment">// true（内容一致，都是“hello”）</span><br>System.out.println(str2.equals(str4)); <span class="hljs-comment">// true（内容一致，都是“hello”）</span><br>System.out.println(str1.equals(str5)); <span class="hljs-comment">// true（内容一致，都是“hello”）</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
    原文链接: &lt;a href=&quot;https://www.cnblogs.com/zhuyeshen/p/10954275.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/zh
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="转载" scheme="https://fxhstudy.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>登陆页面验证码的简单实现</title>
    <link href="https://fxhstudy.com/article/12352dde.html"/>
    <id>https://fxhstudy.com/article/12352dde.html</id>
    <published>2021-02-08T15:44:24.000Z</published>
    <updated>2021-02-09T09:43:07.755Z</updated>
    
    <content type="html"><![CDATA[<p>这里介绍一下，我们平常在登陆时，所需要的检验的简单的验证码是怎么实现的，这里只介绍大概的步骤，了解原理即可。(为什么写这个呢，因为比较晚了，今天又有一些原因，不太学的进了，又不想这么早就滑手机，就简单记录一下，娱乐时间-1h)</p><p>至于美化的话，在开发时一般时是借助别人的代码。。。</p><p>这里先贴上大概实现的样图，可能很简陋(不好看?)，美化什么的，我就没有弄了。</p><img src="https://qiniuyun.fxhstudy.com/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B00.png" srcset="/img/loading.gif"><br/><br/><p>先介绍涉及到的类</p><h2 id="提前须知"><a href="#提前须知" class="headerlink" title="提前须知"></a>提前须知</h2><h3 id="Bfferedimage类"><a href="#Bfferedimage类" class="headerlink" title="Bfferedimage类"></a>Bfferedimage类</h3><p>Image是一个抽象类，BufferedImage是其实现类，是一个带缓冲区图像类，主要作用是将一幅图片加载到内存中（BufferedImage生成的图片在内存里有一个图像缓冲区，利用这个缓冲区我们可以很方便地操作这个图片），提供获得绘图对象、图像缩放、选择图像平滑度等功能，通常用来做图片大小变换、图片变灰、设置透明不透明等。</p><h3 id="ImageIO"><a href="#ImageIO" class="headerlink" title="ImageIO"></a>ImageIO</h3><p>提供read()和write()静态方法，读写图片，比以往的InputStream读写更方便。</p><h3 id="Graphics类"><a href="#Graphics类" class="headerlink" title="Graphics类"></a>Graphics类</h3><p>提供基本绘图和显示格式化文字的方法，画图用的坐标系原点在左上角，纵轴向下。主要有画线段、矩形、圆、椭圆、圆弧、多边形等各种颜色的图形、线条。</p><h2 id="大体分析"><a href="#大体分析" class="headerlink" title="大体分析"></a>大体分析</h2><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><p>先创建BufferedImage对象，在内存中的图片。创建大概就如下图所示</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//1.创建对象</span><br><span class="hljs-comment">//1.1设置宽高</span><br><span class="hljs-keyword">int</span> width = <span class="hljs-number">100</span>;<br><span class="hljs-keyword">int</span> height = <span class="hljs-number">50</span>;<br><span class="hljs-comment">//1.2创建对象</span><br>BufferedImage image = <span class="hljs-keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_3BYTE_BGR);<br></code></pre></div></td></tr></table></figure><br><img src="https://qiniuyun.fxhstudy.com/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B01.png" srcset="/img/loading.gif"><br><br><h3 id="美化图片"><a href="#美化图片" class="headerlink" title="美化图片"></a>美化图片</h3><p>接着就是美化图片，大概就是改变背景色加边框，再加上画干扰线</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//2. 美化图片</span><br><span class="hljs-comment">//2.1 填充背景色</span><br>Graphics g = image.getGraphics();<span class="hljs-comment">// 画笔对象</span><br>g.setColor(Color.PINK);<span class="hljs-comment">// 设置背景颜色</span><br>g.fill3DRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,width, height, <span class="hljs-keyword">true</span>);<br><br><span class="hljs-comment">//2.2 画边框</span><br>g.setColor(Color.blue);<span class="hljs-comment">// 设置边框颜色</span><br>g.draw3DRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width-<span class="hljs-number">2</span>, height-<span class="hljs-number">2</span>, <span class="hljs-keyword">true</span>);<br><br><span class="hljs-comment">//2.3 画干扰线</span><br>g.setColor(Color.GREEN);<span class="hljs-comment">// 设置干扰线颜色</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">7</span>; i++) &#123;<br>    <span class="hljs-comment">//随机生成坐标点</span><br>    <span class="hljs-comment">//x1、y1即线的起始坐标，x2、y2即线的终点坐标</span><br>    <span class="hljs-keyword">int</span> x1 = ran.nextInt(width);<br>    <span class="hljs-keyword">int</span> y1 = ran.nextInt(height);<br>    <span class="hljs-keyword">int</span> x2 = ran.nextInt(width);<br>    <span class="hljs-keyword">int</span> y2 = ran.nextInt(height);<br>    g.drawLine(x1, y1, x2, y2);<span class="hljs-comment">//"画进内存"</span><br>&#125;<br></code></pre></div></td></tr></table></figure><br><img src="https://qiniuyun.fxhstudy.com/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B02.png" srcset="/img/loading.gif"><br><h3 id="验证码实现"><a href="#验证码实现" class="headerlink" title="验证码实现"></a>验证码实现</h3><p>验证码的实现，原理就是字符串中随机取出四个值，打印到图片上</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java">String str = <span class="hljs-string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;<span class="hljs-comment">// 验证码就在这其中取</span><br><span class="hljs-comment">//生成随即图标</span><br>Random ran = <span class="hljs-keyword">new</span> Random();<br><br><span class="hljs-comment">//写验证码</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">4</span>; i++) &#123;<br>    <span class="hljs-keyword">int</span> index = ran.nextInt(str.length());<span class="hljs-comment">//随机生成index下标</span><br>    <span class="hljs-keyword">char</span> ch = str.charAt(index);<span class="hljs-comment">//取值</span><br>    g.drawString(ch+<span class="hljs-string">""</span>, width/<span class="hljs-number">10</span>*(i*<span class="hljs-number">2</span>), height/<span class="hljs-number">2</span>);<span class="hljs-comment">//打印</span><br>&#125;<br></code></pre></div></td></tr></table></figure><br><img src="https://qiniuyun.fxhstudy.com/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B03.png" srcset="/img/loading.gif"><br><h3 id="图片输出"><a href="#图片输出" class="headerlink" title="图片输出"></a>图片输出</h3><p>将图片输出到页面</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java">ImageIO.write(image, <span class="hljs-string">"jpg"</span>, response.getOutputStream());<br></code></pre></div></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">int</span> width = <span class="hljs-number">100</span>;<br><span class="hljs-keyword">int</span> height = <span class="hljs-number">50</span>;<br><br><span class="hljs-comment">//创建对象</span><br>BufferedImage image = <span class="hljs-keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_3BYTE_BGR);<br><br><span class="hljs-comment">//背景色</span><br>Graphics g = image.getGraphics();<span class="hljs-comment">// 画笔对象</span><br>g.setColor(Color.PINK);<br>g.fill3DRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,width, height, <span class="hljs-keyword">true</span>);<br><br><span class="hljs-comment">//边框</span><br>g.setColor(Color.blue);<br>g.draw3DRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width-<span class="hljs-number">2</span>, height-<span class="hljs-number">2</span>, <span class="hljs-keyword">true</span>);<br><br>String str = <span class="hljs-string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;<br><span class="hljs-comment">//生成随即图标</span><br>Random ran = <span class="hljs-keyword">new</span> Random()；<br><br><span class="hljs-comment">//干扰线</span><br>g.setColor(Color.GREEN);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">7</span>; i++) &#123;<br>    <span class="hljs-comment">//随机生成坐标点</span><br>    <span class="hljs-keyword">int</span> x1 = ran.nextInt(width);<br>    <span class="hljs-keyword">int</span> y1 = ran.nextInt(height);<br>    <span class="hljs-keyword">int</span> x2 = ran.nextInt(width);<br>    <span class="hljs-keyword">int</span> y2 = ran.nextInt(height);<br>    g.drawLine(x1, y1, x2, y2);<br>&#125;<br><br><br><span class="hljs-comment">//验证码</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">4</span>; i++) &#123;<br>    <span class="hljs-keyword">int</span> index = ran.nextInt(str.length());<br>    <span class="hljs-keyword">char</span> ch = str.charAt(index);<br>    g.drawString(ch+<span class="hljs-string">""</span>, width/<span class="hljs-number">10</span>*(i*<span class="hljs-number">2</span>), height/<span class="hljs-number">2</span>);<br>&#125;<br><br><br><span class="hljs-comment">//输出</span><br>ImageIO.write(image, <span class="hljs-string">"jpg"</span>, response.getOutputStream());<br></code></pre></div></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/jiachunchun/article/details/89670721" target="_blank" rel="noopener" class="LinkCard">BufferedImage类、Image类、Graphics类</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里介绍一下，我们平常在登陆时，所需要的检验的简单的验证码是怎么实现的，这里只介绍大概的步骤，了解原理即可。(为什么写这个呢，因为比较晚了，今天又有一些原因，不太学的进了，又不想这么早就滑手机，就简单记录一下，娱乐时间-1h)&lt;/p&gt;
&lt;p&gt;至于美化的话，在开发时一般时是借
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>IDEA中的一些快捷键</title>
    <link href="https://fxhstudy.com/article/ef8f371d.html"/>
    <id>https://fxhstudy.com/article/ef8f371d.html</id>
    <published>2021-02-07T05:19:28.000Z</published>
    <updated>2021-03-25T14:51:14.732Z</updated>
    
    <content type="html"><![CDATA[<p>IDEA中有很多有用的快捷键，这里介绍一些会经常用到的快捷键，方便了我们写代码。</p><h3 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h3><p class="note note-primary">Shift+F10</p><h3 id="上下移动一行代码"><a href="#上下移动一行代码" class="headerlink" title="上下移动一行代码"></a>上下移动一行代码</h3><p class="note note-primary">Ctrl+Shift+↑/↓(上下键)</p><h3 id="查找和替换"><a href="#查找和替换" class="headerlink" title="查找和替换"></a>查找和替换</h3><p class="note note-primary">Ctrl+r</p><p>在当前文件下进行替换。</p><h3 id="全局查找和替换"><a href="#全局查找和替换" class="headerlink" title="全局查找和替换"></a>全局查找和替换</h3><p class="note note-primary">Ctrl+Shift+r</p><p>Ctrl+Shift+f可以实现全局查找，Ctrl+Shift+r则是先进行全局查找，再将你全局查找出来的内容进行全部替换。</p><h3 id="代码自动提示快捷键"><a href="#代码自动提示快捷键" class="headerlink" title="代码自动提示快捷键"></a>代码自动提示快捷键</h3><p class="note note-primary">Alt+/</p><p>在IDEA中我们喜欢设置一些代码模板，用快捷键快速使用，例如psvm，但是有时候一些问题会加载不出来，这个时候，我们可以使用Alt+/来重新实现代码自动提示。</p><h3 id="Surround-With快捷键"><a href="#Surround-With快捷键" class="headerlink" title="Surround With快捷键"></a>Surround With快捷键</h3><p class="note note-primary">Ctrl+Alt+t</p><p>实现将你选中的代码进行if,while,try…catch…等等一些列操作</p><h3 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h3><p class="note note-primary">Alt+Insert</p><p>不多介绍，getter,setter,重写父类</p><h3 id="显示快速修复列表"><a href="#显示快速修复列表" class="headerlink" title="显示快速修复列表"></a>显示快速修复列表</h3><p class="note note-primary">Alt+Enter</p><p>这个作用就太大了，自动导包，异常捕获，实现接口，实现抽象类…太多了，有十七多种作用。</p><h3 id="显示方法参数"><a href="#显示方法参数" class="headerlink" title="显示方法参数"></a>显示方法参数</h3><p class="note note-primary">Ctrl+p</p><p>调用方法时，Ctrl+P可以看到方法中你需要填写的参数</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p class="note note-primary">Ctrl+/</p>使用"//"注释/取消注释(一般用于单行注释)<p class="note note-primary">Ctrl+Shift+/</p>使用"/**/"注释/取消注释(一般用于多行注释)<h3 id="自动优化代码缩进"><a href="#自动优化代码缩进" class="headerlink" title="自动优化代码缩进"></a>自动优化代码缩进</h3><p class="note note-primary">Ctrl+Shift+L</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;IDEA中有很多有用的快捷键，这里介绍一些会经常用到的快捷键，方便了我们写代码。&lt;/p&gt;
&lt;h3 id=&quot;运行代码&quot;&gt;&lt;a href=&quot;#运行代码&quot; class=&quot;headerlink&quot; title=&quot;运行代码&quot;&gt;&lt;/a&gt;运行代码&lt;/h3&gt;&lt;p class=&quot;note no
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="IDEA" scheme="https://fxhstudy.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>IDEA报错:inStream parameter is null</title>
    <link href="https://fxhstudy.com/article/f472fef5.html"/>
    <id>https://fxhstudy.com/article/f472fef5.html</id>
    <published>2021-02-06T08:59:37.000Z</published>
    <updated>2021-02-09T15:55:29.727Z</updated>
    
    <content type="html"><![CDATA[<p>先放图</p><img src="https://qiniuyun.fxhstudy.com/inStream%20parameter%20is%20null.png" srcset="/img/loading.gif"><br><br><p><font color="#FF6B68">错误: inStream parameter is null</font></p><p>连不上数据库，挺烦人的，查了好几篇资料，原因是.properties配置文件放置的路径不对，导致了在加载配置文件的时候，没有获取输入流。</p><p>知道原理就好办了，但是IDEA更新后，和之前放置.properties配置文件的包不一样了</p><p>之前是放在src包下即可，现在不行了，<br><font color="#FF6B68">这里在新版本的IDEA中放在resources包下即可成功获取输入流。</font></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先放图&lt;/p&gt;
&lt;img src=&quot;https://qiniuyun.fxhstudy.com/inStream%20parameter%20is%20null.png&quot; srcset=&quot;/img/loading.gif&quot;&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;&lt;font colo
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="IDEA" scheme="https://fxhstudy.com/tags/IDEA/"/>
    
      <category term="Tomcat" scheme="https://fxhstudy.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>如何在Github中精准搜索以及几个实用网站</title>
    <link href="https://fxhstudy.com/article/8d187994.html"/>
    <id>https://fxhstudy.com/article/8d187994.html</id>
    <published>2021-02-04T10:11:06.000Z</published>
    <updated>2021-02-05T10:24:08.686Z</updated>
    
    <content type="html"><![CDATA[<p>只有真正接触使用了Github，你才知道，其实他真的是一座宝藏，你可以在其中发现很多有趣的东西，不仅仅是程序员的一些项目。<br>这里记录一些Github精准搜索的一些技巧，便于查找和学习</p><h3 id="精准查找"><a href="#精准查找" class="headerlink" title="精准查找"></a>精准查找</h3><h4 id="1-收藏量-Stars"><a href="#1-收藏量-Stars" class="headerlink" title="1. 收藏量-Stars:"></a>1. 收藏量-Stars:</h4><p class="note note-primary">例：输入<b> start:>=500 </b>,意为匹配收藏数量超过500的项目;</p><h4 id="2-复刻量-forks"><a href="#2-复刻量-forks" class="headerlink" title="2. 复刻量-forks:"></a>2. 复刻量-forks:</h4><p class="note note-primary">例：输入<b> forks:>=500 </b>,意为匹配复刻数量超过500的项目;</p><h4 id="3-关注者-followers"><a href="#3-关注者-followers" class="headerlink" title="3. 关注者-followers:"></a>3. 关注者-followers:</h4><p class="note note-primary">例：输入<b> followers:>=500 </b>,意为匹配关注者数量超过500的项目;</p><h4 id="4-计算机语言-language"><a href="#4-计算机语言-language" class="headerlink" title="4. 计算机语言-language:"></a>4. 计算机语言-language:</h4><p class="note note-primary">例：输入<b> language:Python </b>,意为匹配用Python语言完成的项目;</p><h4 id="5-地域-location"><a href="#5-地域-location" class="headerlink" title="5. 地域-location:"></a>5. 地域-location:</h4><p class="note note-primary">例：输入<b> location:china </b>,意为匹配地址在China的用户;</p><h4 id="6-姓名搜索-in-fullname"><a href="#6-姓名搜索-in-fullname" class="headerlink" title="6. 姓名搜索-in:fullname"></a>6. 姓名搜索-in:fullname</h4><p class="note note-primary">例：输入<b> Ben in:fullname </b>,意为搜索名字里包含Ben的开发者;</p><p>以上就是在Github中搜索可以采取的精准搜索方式，对于我这样的新手来说还是很有帮助的。我认为善于自己寻找资源也是我们从事这一行所必须掌握的技能。</p><h3 id="实用网站"><a href="#实用网站" class="headerlink" title="实用网站"></a>实用网站</h3><h4 id="1-表情包的博物馆-Github最有毒的仓库-中国表情包大集合-聚欢乐"><a href="#1-表情包的博物馆-Github最有毒的仓库-中国表情包大集合-聚欢乐" class="headerlink" title="1.表情包的博物馆, Github最有毒的仓库, 中国表情包大集合, 聚欢乐~"></a>1.表情包的博物馆, Github最有毒的仓库, 中国表情包大集合, 聚欢乐~</h4><p><a href="https://github.com/zhaoolee/ChineseBQB" target="_blank" rel="noopener">https://github.com/zhaoolee/ChineseBQB</a></p><p>在这你能找到很多表情包，如果你对收集表情包有兴趣可以康一康。</p><h4 id="2-🌈谷粒-Chrome插件英雄榜"><a href="#2-🌈谷粒-Chrome插件英雄榜" class="headerlink" title="2.🌈谷粒-Chrome插件英雄榜"></a>2.🌈谷粒-Chrome插件英雄榜</h4><p><a href="https://github.com/zhaoolee/ChromeAppHeroes" target="_blank" rel="noopener">https://github.com/zhaoolee/ChromeAppHeroes</a></p><p>91款Chrome插件(目前为止，还在持续更新)，真的巨有用!如果你使用的是Chrome浏览器，强烈安利，真的很多插件巨有用。</p><h4 id="3-Bilibili-公开课目录"><a href="#3-Bilibili-公开课目录" class="headerlink" title="3.Bilibili 公开课目录"></a>3.Bilibili 公开课目录</h4><p><a href="https://github.com/elder-frog/OpenCourseCatalog" target="_blank" rel="noopener">https://github.com/elder-frog/OpenCourseCatalog</a></p><p>多的不说，这个真的封神了，这是一份公开课的目录，这里的视频大多来自 YouTube 等国内无法访问的网站，为了方便国内的朋友观看，作者将这些视频搬运到了 Bilibili。这个真的很厉害了，很多名校的课都可以看到，包括剑桥、麻省理工、斯坦福。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;只有真正接触使用了Github，你才知道，其实他真的是一座宝藏，你可以在其中发现很多有趣的东西，不仅仅是程序员的一些项目。&lt;br&gt;这里记录一些Github精准搜索的一些技巧，便于查找和学习&lt;/p&gt;
&lt;h3 id=&quot;精准查找&quot;&gt;&lt;a href=&quot;#精准查找&quot; class=&quot;h
      
    
    </summary>
    
    
    
      <category term="小技巧" scheme="https://fxhstudy.com/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Github" scheme="https://fxhstudy.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>启动tomcat时,端口占用的解决办法</title>
    <link href="https://fxhstudy.com/article/2f4c50c2.html"/>
    <id>https://fxhstudy.com/article/2f4c50c2.html</id>
    <published>2021-02-04T08:46:09.000Z</published>
    <updated>2021-02-06T09:22:32.809Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>今天在用IDEA打开Tomcat的时候，出了点意外，</p><p><font color="#FF6B68">错误: 代理抛出异常 : java.rmi.server.ExportException: Port already in use: 1099</font></p><p>查了一下资料，这里是因为1099端口被其他进程占用了，需要杀死占用这个端口号的其他进程</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>终端中输入 </p><p><code>netstat -ano|findstr 1099</code> </p><p>找到PID，结束进程</p><p><code>taskkill -f -pid xxxx(这里是你的PID)</code></p><p>然后就可以正常启动Tomcat了。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/xdp-gacl/p/5288399.html" target="_blank" rel="noopener" class="LinkCard">启动tomcat时 错误: 代理抛出异常 : java.rmi.server.ExportException: Port already in use: 1099的解决办法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;今天在用IDEA打开Tomcat的时候，出了点意外，&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#FF6B68&quot;&gt;错误: 代理
      
    
    </summary>
    
    
      <category term="程序猿" scheme="https://fxhstudy.com/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="Java" scheme="https://fxhstudy.com/tags/Java/"/>
    
      <category term="IDEA" scheme="https://fxhstudy.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>一些小东西</title>
    <link href="https://fxhstudy.com/article/88de85c9.html"/>
    <id>https://fxhstudy.com/article/88de85c9.html</id>
    <published>2021-01-30T10:39:42.000Z</published>
    <updated>2021-02-23T07:06:24.820Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c4fcc878c427d19fb6cb7c23ce7e9c08480f1c681410a71972cf254a284f8e32">d8cd019511c7f3543a104e8f05f74c583d90ab80bb96d1b4fb6600fafc197cb7aa238994b1b729f5122a18e909c5215b47177b1bc89012c095dc3b5d5d7125842b6db3e3a14d190265299d0dddddc05c2b41860817c30148119d2718b10626e7d902366afd31b6fcc9fb4560abcec5e7210b880f8e0815e15ffc0e279dd61e4cf403fee6ca732d3f283d96c9b984b7e6d6f394048bdf65c7aff489c810f0f42ae420ee966c375638525422c8a628f7c13499eac3c27a85245215cad8b8ca55055c4a9bad3d4a7429a373a3c7e2ec103add69ea557208dac88395894cb07d6bf59d7bc01c01a0764b90a745bddba4d4d8205db8e7d679fd451f6133d3a10de1c6bbfd06c1a61ccfb0ce4e475a467519e11c8cc8252b3fd60ab8ef3909441d6a02ad75d03fc94bd9bc291a43aba05a33bafb7093f45072881aa235dea2d954e94c84f817a6f230b568c3fdd746a95acb862c404dea48ccca813dd4a5bdb2db212137b396977c3430e47ace74090502d000876ac0cbfc819f8a3e763eaccd45ed222b7ba52c75042c26160e3bb79e2c97a573543b76e103015296cb2b5ed3b78034000f42c29bc8772cdf437948194c2b3cbe57106dca4f078ca319327341b58438637b5c71e8de40aaf3c8a604962db946ae753279f8af9a8e69560c79b97495dd189dd80c40e6a2cb9f7020bb0893fe2bd8bd8dd5033549e0519832a1c923dc32c7b5e40da6d0f49a95d12cf0401da4debd176da73c80dfa6f1e8b43412d1e9377584e5bbdd86468d3af00474acb4d21a2a70eef148ee8f3ba6465c1e0e72d2cb20cc8d795c1727c06ab7710c418ab009c4392ba4cbc809454d7ff3225d00da0fc0862b636b80765c32d8519cd442042458c3cc43bf6bd6b8736143d7eb6eff45adb8f02f6119fdf8623e68f47077af9bac27fedfb6970e276eea057f1550ea508c0a325159e98e326c3d3a53c7506b1a1ef4c7293a4a2218d9098c033196c1a4c86c4b162dae94cb21f8bb60bbabfe0ab249b86df8edeab04169b6c64b64bdcba314b0db2018293c9dd95887d3c0fe2c68a9d5a9ca391216acade47d6d8dc282c78521a68007e7cca417e1d592b22ac44ece0d0d45e598611df55e9b08957e04bbc71ed1aabcf44eddb9d2323285556d802c683a2f720409c5ec811eac6d847f7bb6dfd0b37d04484c787aa50b00813a0eb5c9846b7c15f7c87b156109a4344bd2ab282570bde5b454de469973643b2162d3568bce753d964cff6a8e049744d4b6b0b70f466fe67e4290d3719a23f4570edd28b5b7b05bfaa665c2366ce7c78dcd8f8d06fc87bfa232cf6d69535e82a26889c19fe11aa7c931846d544902abaa52371cf50849ca6cd12120bd76f1cd1b721d7d5418c14044a45901eb6b6ab84352c1128068196acc8da0cb67b702351e949925362818d44c5697ff8bf2394783f976a430f191030885c666974f008bacf7a4729e470f23c8ee7ca07195ffdc922d2def6502433c59502cb4d4c3e9384854aa4e35cd1a14bf3dd5f1ff15cfa41ae93ea263e69f07b0b7580881af15d436c17d820822dd74a5888e969587e72fefeaefc36e0e31603b55cc4a75586265f7f2671df4516adb48bc11e2b1d88d8f50e2c88c7e166bba9f9fd21ac6d33f7619eb336a52ae9a3e04b61aec15119704c332d76c92cf5a8418276e903484bd6a75bc0a4b6d48fbf7cda2c27c1242ef2ce5fee67e24f56190401e4e6fefdedb13b6bd228f10ab14575122618194f519ee08d5db51d26b3db926411d26a2b437f4992d6ad9f16673d10111aeb4790c3caaadba54c733a800bc042d404862752d784cd58307e2c34f3c364ec8108b1e0b0a6a73be0d4fc07f78dcf03cda486238b39242d0962d262a1f13039bd5d46eaf69e6571b7ad64059bd60749fd352c6ec2a6f65a73041d3f913803f332edfdab4a98dcc09b7b0ceb80c1f3d1f110b0fd144f13f1ba46f9da5f62611622973bc84d83f8c516145086222ca03840788736fa87e9395fbf7f8a0cb457aefda0ab80170b5e51e1c1d229b6ea32abf68cf92499ea57c85de3d07e75dd97c326c5578b3750ff2a7470c946dbfe8651bf2be3e56fb599fc186a3a389e54c7310060f23bc66abe0dd66b9872e2fd84b2698abe522d2830596b1fc73479449da220452c6c24b4884df0ea20b33c87a8f3e1ebbc5414baaae835c5a48426c7df6ec90a2fcd13f72d1ad3624d709fe26659cca3a1f10e7a4faaeb6e41c9b267354dfa54b1bc329def70c0ef6fc0de42511eddd332b5b4e8989ff04214800b5633871a5db559b019b04fc14bd3023dfdc93d030ba5523482864083f0e05807922aa3b5f7c92228efc65028ab0e3ce3f4ee9804ce7e237392c0bf9de500a79f7c6b6f673f37480a2119e9e0c62f9dbf8bbbde4675dac28db07f86b0aacf7eaac13a54212bdb7911fd3f8ec399908d74793c3a574277de3cf5fbb3a489a6b02815792801be5fab83a7e26e6611fb78caa44fdc0f247ea2c4099328277c5df6880f0157e171349e39829ad7a71907d3d3812504d49fef011b2b974dfc3bb3bf7d1bb9e5735c5dbb531d86b4bf2bdfd2205b9b3f63864e47dc2e9c91f1d34eb5b8bb52f0b7e079319c8c1927197521cd37ed99abab49ec61f61bd4f9a6f42333e5b327923ae2d857dab1c8651660a837fb1cc63adb24d2007b0ae7a41f9376d9eeb9621875d57af8518f45c756757f7c84881f043238a13ef0515152f23e030bf5cc0e9205f93dee382723e86a6a7ed744684ff1d13b7e258196ab0cb434a6aaed5d8040d17109c94ab7d83b6e67848886ce089ada873198af46a72c0beabef365b61863f9356ac79903d6b2a1ae918d07d5980ebb66c83d348b62a8e558023389c97eacfaff593d5e8415d065b5edccfdaeb8f258289f3af64c6d81a452c8f38b5c19b010f69559b319b5c498035f6129c3cd016aa7c34d2a3452c402ecfdf2e42a597bb29e17c9c77c1d7b3df0f1ec2b021fd21d56dce2c2680ff7f449c7160540a7eefc7d000812b5021532f8e52e684551134f0958614ac0f46b506de8d79ae4dfb64d244c1657a0a9535b773ac9c718fbe7d8a9b888dc9bc14bc2d649f461ac1c922cb2818f73fade64a36e8193f69837dc6ac7a18ef94f52d873b2e51630e4709ebd3d68f2649d6698ecc035881a64e41d785461797ab27ad95e91d6bce2643b607cf59fc42a1db0ca4c111312a697790e806509119426b06727c1bd06044d369c3d9c020bc86f18f28faf9c6c754084e3bd6a96412474149ba0cd6ef869d53999859d13abf4747fb6845bf52337e71cb1c48efcc4287663d4d697cb6834f09d53d06525ecd330e99c1d5240a1030bc183315747401156f5daa6b21383a72f4f1dc8699f160a8f44e347a5af3b8148f3c5e307f3fecc44e6c40b29fda108cf34d514baf467ce1407a9ef274a7ba79b802a3d5d686c340d1ff880e115450aaaeb640d47b6e71ced25a4c0a7b595db6dfe4809fa90fc5784a07da325bef977fac17d6fa5d627eee62cf836af59a70d65195cddd49e9fa1d1dbce0b0fe997d56c624a08dda004363683b265b30e63cc59814106c2b613a5d8f6ede11df421c72028b3f1de1de2cf06b2e352de2ad6ca6cacf09f00082dc3521077c2eb3ff6dccd6731a68d66e980133879d219eb7510d9597e6c4d9ded8e9bf415e977fabd6087c8a8a719005513942a6e8947234aeb46bc5a0ac932143cb3121a5c9c058ed3f2278d1641b2a59401b4bb2d39d61905d73dfd595addb0345fc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      有东西被加密了, 请输入密码查看.
    
    </summary>
    
    
    
      <category term="小知识点" scheme="https://fxhstudy.com/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
</feed>
